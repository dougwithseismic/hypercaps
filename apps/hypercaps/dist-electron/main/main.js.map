{"version":3,"file":"main.js","sources":["../../../../node_modules/.pnpm/immer@10.1.1/node_modules/immer/dist/immer.mjs","../../electron/services/store/index.ts","../../electron/features/hyperkeys/keyboard-service.ts","../../electron/features/tray.ts","../../electron/main.ts"],"sourcesContent":["// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Reflect.ownKeys(obj).forEach((key) => {\n      iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  const isPlain = isPlainObject(base);\n  if (strict === true || strict === \"class_only\" && !isPlain) {\n    const descriptors = Object.getOwnPropertyDescriptors(base);\n    delete descriptors[DRAFT_STATE];\n    let keys = Reflect.ownKeys(descriptors);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const desc = descriptors[key];\n      if (desc.writable === false) {\n        desc.writable = true;\n        desc.configurable = true;\n      }\n      if (desc.get || desc.set)\n        descriptors[key] = {\n          configurable: true,\n          writable: true,\n          // could live with !!desc.set as well here...\n          enumerable: desc.enumerable,\n          value: base[key]\n        };\n    }\n    return Object.create(getPrototypeOf(base), descriptors);\n  } else {\n    const proto = getPrototypeOf(base);\n    if (proto !== null && isPlain) {\n      return { ...base };\n    }\n    const obj = Object.create(proto);\n    return Object.assign(obj, base);\n  }\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    Object.entries(obj).forEach(([key, value]) => freeze(value, true));\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path)\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if ((!parentState || !parentState.scope_.parent_) && typeof prop !== \"symbol\" && Object.prototype.propertyIsEnumerable.call(targetObject, prop))\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","import { app } from \"electron\";\nimport path from \"path\";\nimport fs from \"fs/promises\";\nimport { produce } from \"immer\";\nimport { AppState } from \"./types/app-state\";\nimport { Feature, FeatureName } from \"./types/feature-config\";\n\nconst DEFAULT_STATE: AppState = {\n  startupOnBoot: false,\n  enableOnStartup: true,\n  features: [\n    {\n      name: \"hyperKey\",\n      isFeatureEnabled: true,\n      config: {\n        enableOnStartup: true,\n        isHyperKeyEnabled: true,\n        trigger: \"CapsLock\",\n        modifiers: [\"LShiftKey\"],\n      },\n    },\n  ],\n};\n\nexport class Store {\n  private static instance: Store;\n  private state: AppState;\n  private filePath: string;\n\n  private constructor() {\n    this.filePath = path.join(app.getPath(\"userData\"), \"state.json\");\n    this.state = DEFAULT_STATE;\n  }\n\n  public static getInstance(): Store {\n    if (!Store.instance) {\n      Store.instance = new Store();\n    }\n    return Store.instance;\n  }\n\n  public async load(): Promise<void> {\n    try {\n      const data = await fs.readFile(this.filePath, \"utf-8\");\n      this.state = JSON.parse(data);\n    } catch (error) {\n      // If file doesn't exist or is invalid, use default state\n      await this.save();\n    }\n  }\n\n  private async save(): Promise<void> {\n    try {\n      await fs.writeFile(this.filePath, JSON.stringify(this.state, null, 2));\n    } catch (error) {\n      console.error(\"Failed to save state:\", error);\n    }\n  }\n\n  // Generic state update method using Immer\n  public async update(recipe: (draft: AppState) => void): Promise<void> {\n    this.state = produce(this.state, recipe);\n    await this.save();\n  }\n\n  // Convenience methods\n  public getState(): AppState {\n    return this.state;\n  }\n\n  public async getFeature<T extends FeatureName>(\n    name: T\n  ): Promise<Feature<T> | undefined> {\n    return this.state.features.find((f) => f.name === name) as Feature<T>;\n  }\n\n  // Startup settings with electron integration\n  public async setStartupOnBoot(enabled: boolean): Promise<void> {\n    await this.update((draft) => {\n      draft.startupOnBoot = enabled;\n    });\n\n    app.setLoginItemSettings({\n      openAtLogin: enabled,\n      path: enabled ? app.getPath(\"exe\") : undefined,\n    });\n  }\n}\n","import { BrowserWindow, dialog, app } from \"electron\";\nimport { spawn, ChildProcess } from \"child_process\";\nimport path from \"path\";\nimport { Store } from \"@electron/services/store\";\nimport { HyperKeyFeatureConfig } from \"@electron/services/types\";\n\ninterface KeyboardState {\n  pressedKeys: string[];\n  timestamp: number;\n}\n\ninterface ServiceState {\n  isListening: boolean;\n  isLoading: boolean;\n  isStarting: boolean;\n  error?: string;\n  lastStartAttempt?: number;\n  lastError?: {\n    message: string;\n    timestamp: number;\n  };\n}\n\nexport class KeyboardService {\n  private mainWindow: BrowserWindow | null = null;\n  private keyboardProcess: ChildProcess | null = null;\n  private store: Store;\n  private startupTimeout: NodeJS.Timeout | null = null;\n  private state: ServiceState = {\n    isListening: false,\n    isLoading: false,\n    isStarting: false,\n  };\n\n  constructor() {\n    this.store = Store.getInstance();\n  }\n\n  private getScriptPath(): string {\n    const scriptName = \"keyboard-monitor.ps1\";\n    const scriptSubPath = path.join(\n      \"electron\",\n      \"features\",\n      \"hyperkeys\",\n      \"scripts\",\n      scriptName\n    );\n\n    return process.env.NODE_ENV === \"development\"\n      ? path.join(app.getAppPath(), scriptSubPath)\n      : path.join(process.resourcesPath, scriptSubPath);\n  }\n\n  private setState(updates: Partial<ServiceState>): void {\n    this.state = { ...this.state, ...updates };\n    this.mainWindow?.webContents.send(\"keyboard-service-state\", {\n      ...this.state,\n      isRunning: this.isRunning(),\n    });\n  }\n\n  public getState(): ServiceState {\n    return { ...this.state };\n  }\n\n  public async init(): Promise<void> {\n    await this.store.load();\n    const hyperKeyFeature = await this.store.getFeature(\"hyperKey\");\n    console.log(\"[KeyboardService] : HyperKeyFeature init()\", hyperKeyFeature);\n\n    if (!hyperKeyFeature) {\n      this.setState({\n        error: \"HyperKey feature not found\",\n        lastError: {\n          message: \"HyperKey feature not found\",\n          timestamp: Date.now(),\n        },\n      });\n      throw new Error(\"HyperKey feature not found\");\n    }\n\n    this.mainWindow?.webContents.send(\"hyperkey-state\", hyperKeyFeature);\n\n    if (hyperKeyFeature.isFeatureEnabled) {\n      await this.startListening();\n    }\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n\n  private async notifyStateUpdate(): Promise<void> {\n    const hyperKeyFeature = await this.store.getFeature(\"hyperKey\");\n    if (hyperKeyFeature) {\n      this.mainWindow?.webContents.send(\"hyperkey-state\", {\n        ...hyperKeyFeature.config,\n        enabled: hyperKeyFeature.isFeatureEnabled,\n      });\n    }\n  }\n\n  public async startListening(): Promise<void> {\n    console.log(\"[KeyboardService] startListening() called\");\n\n    if (this.keyboardProcess) {\n      console.log(\"[KeyboardService] Process already running, returning early\");\n      return;\n    }\n\n    if (this.state.isStarting) {\n      console.log(\"[KeyboardService] Process already starting, waiting...\");\n      await new Promise<void>((resolve) => {\n        const checkInterval = setInterval(() => {\n          if (!this.state.isStarting) {\n            clearInterval(checkInterval);\n            resolve();\n          }\n        }, 100);\n      });\n      if (this.keyboardProcess) return;\n    }\n\n    this.setState({\n      isLoading: true,\n      isStarting: true,\n      lastStartAttempt: Date.now(),\n      error: undefined,\n      lastError: undefined,\n      isListening: false,\n    });\n\n    try {\n      const scriptPath = this.getScriptPath();\n      const hyperKeyFeature = await this.store.getFeature(\"hyperKey\");\n\n      if (!hyperKeyFeature) {\n        throw new Error(\"Failed to get hyperkey feature\");\n      }\n\n      const config = {\n        isEnabled: hyperKeyFeature.isFeatureEnabled,\n        isHyperKeyEnabled: hyperKeyFeature.config.isHyperKeyEnabled,\n        trigger: hyperKeyFeature.config.trigger,\n        modifiers: hyperKeyFeature.config.modifiers || [],\n        capsLockBehavior:\n          hyperKeyFeature.config.capsLockBehavior || \"BlockToggle\",\n      };\n\n      const command = [\n        // Enable debug output and set error preferences\n        \"$ProgressPreference = 'SilentlyContinue';\",\n        \"$ErrorActionPreference = 'Stop';\",\n        \"Write-Host '[DEBUG] Starting keyboard monitor...';\",\n\n        // Set up config\n        \"$Config = @{\",\n        `  isEnabled=$${config.isEnabled.toString().toLowerCase()};`,\n        `  isHyperKeyEnabled=$${config.isHyperKeyEnabled.toString().toLowerCase()};`,\n        `  trigger='${config.trigger}';`,\n        `  modifiers=@(${config.modifiers.map((m) => `'${m}'`).join(\",\") || \"@()\"});`,\n        `  capsLockBehavior='${config.capsLockBehavior}';`,\n        \"};\",\n\n        // Debug output config\n        \"Write-Host '[DEBUG] Config:' ($Config | ConvertTo-Json -Depth 10);\",\n\n        // Execute script with proper error handling\n        \"try {\",\n        `  Set-Location '${path.dirname(scriptPath)}';`,\n        `  . '${scriptPath}';`,\n        \"} catch {\",\n        \"  Write-Error $_.Exception.Message;\",\n        \"  Write-Error $_.ScriptStackTrace;\",\n        \"  exit 1;\",\n        \"}\",\n      ].join(\" \");\n\n      console.log(\"[KeyboardService] command\", command);\n      console.log(\"[KeyboardService] Spawning process with command:\", command);\n      console.log(\"[KeyboardService] Script path:\", scriptPath);\n      console.log(\"[KeyboardService] Process env:\", process.env.NODE_ENV);\n\n      // Verify script exists\n      const fs = require(\"fs\");\n      if (!fs.existsSync(scriptPath)) {\n        throw new Error(`Script not found at path: ${scriptPath}`);\n      }\n      console.log(\"[KeyboardService] Script exists at path\");\n\n      this.keyboardProcess = spawn(\"powershell.exe\", [\n        \"-ExecutionPolicy\",\n        \"Bypass\",\n        \"-NoProfile\",\n        \"-NonInteractive\",\n        \"-Command\",\n        command,\n      ]);\n\n      // Check if process started successfully\n      if (!this.keyboardProcess.pid) {\n        throw new Error(\"Failed to start PowerShell process\");\n      }\n      console.log(\n        \"[KeyboardService] Process started with PID:\",\n        this.keyboardProcess.pid\n      );\n\n      await this.setupProcessListeners();\n\n      this.setState({\n        isListening: true,\n        isLoading: false,\n      });\n      console.log(\"[KeyboardService] State updated\");\n      await this.notifyStateUpdate();\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"Unknown error during startup\";\n      this.setState({\n        isStarting: false,\n        error: errorMessage,\n        lastError: {\n          message: errorMessage,\n          timestamp: Date.now(),\n        },\n      });\n      this.handleStartupFailure(errorMessage);\n    }\n  }\n\n  private async setupProcessListeners(): Promise<void> {\n    if (!this.keyboardProcess) {\n      console.log(\"[KeyboardService] Process not found, returning early\");\n      return;\n    }\n\n    console.log(\"[KeyboardService] Setting up process listeners\");\n\n    return new Promise((resolve, reject) => {\n      let hasReceivedInitialData = false;\n      const cleanup = () => {\n        console.log(\"[KeyboardService] Cleaning up listeners\");\n        if (this.keyboardProcess) {\n          this.keyboardProcess.stdout?.removeAllListeners();\n          this.keyboardProcess.stderr?.removeAllListeners();\n          this.keyboardProcess.removeAllListeners();\n        }\n      };\n\n      // Handle process errors\n      this.keyboardProcess.on(\"error\", (error) => {\n        console.error(\"[KeyboardService] Process error:\", error);\n        cleanup();\n        reject(error);\n      });\n\n      // Handle stdout data\n      this.keyboardProcess.stdout?.on(\"data\", (data) => {\n        const output = data.toString();\n        console.log(\"[KeyboardService] Raw stdout:\", output);\n\n        if (!hasReceivedInitialData) {\n          console.log(\"[KeyboardService] Received initial data\");\n          hasReceivedInitialData = true;\n          this.clearStartupState();\n          resolve();\n        }\n\n        this.handleKeyboardOutput(data);\n      });\n\n      // Handle stderr data\n      this.keyboardProcess.stderr?.on(\"data\", (data) => {\n        const error = data.toString();\n        console.error(\"[KeyboardService] stderr:\", error);\n        if (!hasReceivedInitialData) {\n          cleanup();\n          reject(new Error(error));\n        }\n      });\n\n      // Handle process exit\n      this.keyboardProcess.on(\"close\", (code, signal) => {\n        console.log(\n          \"[KeyboardService] Process closed with code:\",\n          code,\n          \"signal:\",\n          signal\n        );\n        cleanup();\n        this.keyboardProcess = null;\n\n        // Update state to reflect process termination\n        this.setState({\n          isListening: false,\n          isLoading: false,\n          error: code !== 0 ? `Process exited with code ${code}` : undefined,\n        });\n\n        if (!hasReceivedInitialData) {\n          reject(\n            new Error(`Process exited with code ${code} before sending data`)\n          );\n        }\n      });\n\n      // Set timeout for initial data\n      const timeout = setTimeout(() => {\n        if (!hasReceivedInitialData) {\n          console.error(\"[KeyboardService] Timeout waiting for initial data\");\n          cleanup();\n          reject(new Error(\"Timeout waiting for initial data\"));\n        }\n      }, 5000);\n\n      // Cleanup timeout on success or failure\n      Promise.race([\n        new Promise((_, timeoutReject) => {\n          timeout.unref(); // Don't let timeout prevent process exit\n        }),\n        new Promise<void>((successResolve) => {\n          const checkInterval = setInterval(() => {\n            if (hasReceivedInitialData) {\n              clearInterval(checkInterval);\n              clearTimeout(timeout);\n              successResolve();\n            }\n          }, 100);\n        }),\n      ]).catch((error) => {\n        clearTimeout(timeout);\n        reject(error);\n      });\n    });\n  }\n\n  private clearStartupState(): void {\n    if (this.startupTimeout) {\n      clearTimeout(this.startupTimeout);\n      this.startupTimeout = null;\n    }\n    this.setState({\n      isLoading: false,\n      isStarting: false,\n    });\n  }\n\n  private handleStartupFailure(message: string): void {\n    this.clearStartupState();\n    if (this.keyboardProcess) {\n      this.keyboardProcess.kill();\n      this.keyboardProcess = null;\n    }\n    this.setState({\n      isListening: false,\n      error: message,\n      lastError: {\n        message,\n        timestamp: Date.now(),\n      },\n    });\n    dialog.showErrorBox(\n      \"Keyboard Monitor Error\",\n      `Failed to start keyboard monitor: ${message}`\n    );\n  }\n\n  public async stopListening(): Promise<void> {\n    if (this.keyboardProcess) {\n      this.keyboardProcess.stdout?.removeAllListeners();\n      this.keyboardProcess.stderr?.removeAllListeners();\n      this.keyboardProcess.removeAllListeners();\n      this.keyboardProcess.kill();\n      this.keyboardProcess = null;\n    }\n\n    this.setState({\n      isListening: false,\n      isLoading: false,\n      error: undefined,\n    });\n    await this.notifyStateUpdate();\n  }\n\n  private handleKeyboardOutput = (data: Buffer) => {\n    try {\n      const lines = data.toString().split(\"\\n\");\n      for (const line of lines) {\n        const trimmed = line.trim();\n        if (!trimmed) continue;\n\n        if (trimmed.startsWith(\"[DEBUG]\")) {\n          console.log(trimmed);\n          continue;\n        }\n\n        try {\n          const state = JSON.parse(trimmed);\n          const keyboardState: KeyboardState = {\n            pressedKeys: Array.isArray(state.pressedKeys)\n              ? state.pressedKeys\n              : [],\n            timestamp: Date.now(),\n          };\n\n          // Emit keyboard state to renderer\n          this.mainWindow?.webContents.send(\"keyboard-event\", keyboardState);\n        } catch (parseError) {\n          if (trimmed.startsWith(\"{\") || trimmed.startsWith(\"[\")) {\n            console.error(\"Error parsing keyboard state:\", parseError);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling keyboard output:\", error);\n    }\n  };\n\n  public async restartWithConfig(config: HyperKeyFeatureConfig): Promise<void> {\n    await this.store.update((draft) => {\n      const feature = draft.features.find((f) => f.name === \"hyperKey\");\n      if (feature) {\n        feature.config = config;\n      }\n    });\n\n    await this.stopListening();\n    await this.startListening();\n  }\n\n  public isRunning(): boolean {\n    return this.keyboardProcess !== null;\n  }\n\n  public dispose(): void {\n    this.stopListening();\n    this.mainWindow = null;\n  }\n}\n","import {\r\n  Tray,\r\n  Menu,\r\n  nativeImage,\r\n  BrowserWindow,\r\n  dialog,\r\n  globalShortcut,\r\n} from \"electron\";\r\nimport path from \"path\";\r\nimport { Store } from \"../services/store\";\r\nimport { KeyboardService } from \"./hyperkeys/keyboard-service\";\r\n\r\nexport class TrayFeature {\r\n  private tray: Tray | null = null;\r\n  private mainWindow: BrowserWindow | null = null;\r\n  private keyboardService: KeyboardService | null = null;\r\n\r\n  constructor(mainWindow: BrowserWindow, keyboardService: KeyboardService) {\r\n    this.mainWindow = mainWindow;\r\n    this.keyboardService = keyboardService;\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    const icon = nativeImage\r\n      .createFromPath(path.join(__dirname, \"../../src/assets/tray-icon.png\"))\r\n      .resize({ width: 16, height: 16 });\r\n\r\n    this.tray = new Tray(icon);\r\n    this.tray.setToolTip(\"HyperCaps - Keyboard Remapping Tool\");\r\n\r\n    await this.setupTrayMenu();\r\n    this.registerGlobalShortcuts();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private async setupTrayMenu(): Promise<void> {\r\n    if (!this.tray) return;\r\n\r\n    const store = Store.getInstance();\r\n    const isEnabled = (await store.getFeature(\"hyperKey\")).isFeatureEnabled;\r\n    const { startupOnBoot, enableOnStartup } = store.getState();\r\n\r\n    const contextMenu = Menu.buildFromTemplate([\r\n      {\r\n        label: \"HyperCaps\",\r\n        enabled: false,\r\n        icon: nativeImage\r\n          .createFromPath(\r\n            path.join(__dirname, \"../../src/assets/tray-icon.png\")\r\n          )\r\n          .resize({ width: 16, height: 16 }),\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Enable HyperCaps\",\r\n        type: \"checkbox\",\r\n        checked: isEnabled,\r\n        accelerator: \"CommandOrControl+Shift+E\",\r\n        click: (menuItem) => {\r\n          if (menuItem.checked) {\r\n            const state = this.keyboardService?.getState();\r\n            console.log(\"CHECKBOX\", state);\r\n\r\n            this.keyboardService?.startListening();\r\n          } else {\r\n            this.keyboardService?.stopListening();\r\n          }\r\n          this.mainWindow?.webContents.send(\r\n            \"keyboard-service-state\",\r\n            menuItem.checked\r\n          );\r\n        },\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Start with Windows\",\r\n        type: \"checkbox\",\r\n        checked: startupOnBoot,\r\n        click: async (menuItem) => {\r\n          await store.setStartupOnBoot(menuItem.checked);\r\n        },\r\n      },\r\n      {\r\n        label: \"Enable on Startup\",\r\n        type: \"checkbox\",\r\n        checked: enableOnStartup,\r\n        click: async (menuItem) => {\r\n          await store.update((draft) => {\r\n            const hyperkeyFeature = draft.features.find(\r\n              (f) => f.name == \"hyperKey\"\r\n            );\r\n            if (hyperkeyFeature) {\r\n              hyperkeyFeature.isFeatureEnabled = menuItem.checked;\r\n            }\r\n          });\r\n        },\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Open Shortcut Manager\",\r\n        accelerator: \"CommandOrControl+Shift+S\",\r\n        click: () => {\r\n          this.showWindow();\r\n        },\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"About HyperCaps\",\r\n        click: () => {\r\n          dialog.showMessageBox({\r\n            type: \"info\",\r\n            title: \"About HyperCaps\",\r\n            message: \"HyperCaps - Advanced Keyboard Remapping Tool\",\r\n            detail: \"Version 0.0.1\\nCreated for Windows power users.\",\r\n          });\r\n        },\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Quit HyperCaps\",\r\n        accelerator: \"CommandOrControl+Q\",\r\n        click: () => {\r\n          this.quit();\r\n        },\r\n      },\r\n    ]);\r\n\r\n    this.tray.setContextMenu(contextMenu);\r\n  }\r\n\r\n  private registerGlobalShortcuts(): void {\r\n    const ret = globalShortcut.register(\"CommandOrControl+Shift+S\", () => {\r\n      this.showWindow();\r\n    });\r\n\r\n    if (!ret) {\r\n      console.error(\"Failed to register global shortcut\");\r\n    }\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    if (!this.tray) return;\r\n\r\n    this.tray.on(\"double-click\", () => {\r\n      this.showWindow();\r\n    });\r\n  }\r\n\r\n  private showWindow(): void {\r\n    this.mainWindow?.show();\r\n    this.mainWindow?.focus();\r\n  }\r\n\r\n  private quit(): void {\r\n    if (this.mainWindow) {\r\n      (this.mainWindow as any).isQuitting = true;\r\n    }\r\n    require(\"electron\").app.quit();\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.tray) {\r\n      this.tray.destroy();\r\n      this.tray = null;\r\n    }\r\n  }\r\n}\r\n","import { app, BrowserWindow, ipcMain, dialog, globalShortcut } from \"electron\";\nimport path from \"path\";\nimport { KeyboardService } from \"./features/hyperkeys/keyboard-service\";\nimport { Store } from \"./services/store\";\nimport { TrayFeature } from \"./features/tray\";\n\n// Immediate environment logging\nconsole.log(\"=== Environment Debug ===\");\nconsole.log(\"NODE_ENV:\", process.env.NODE_ENV);\nconsole.log(\"isDev:\", process.env.NODE_ENV === \"development\");\nconsole.log(\"======================\");\n\n// Check platform - exit if not Windows\nif (process.platform !== \"win32\") {\n  dialog.showErrorBox(\n    \"Unsupported Platform\",\n    \"HyperCaps is only supported on Windows. The application will now exit.\"\n  );\n  app.quit();\n}\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\nif (require(\"electron-squirrel-startup\")) {\n  app.quit();\n}\n\nlet keyboardService: KeyboardService;\nlet trayFeature: TrayFeature | null = null;\nlet mainWindow: BrowserWindow | null = null;\n\nconst createWindow = async () => {\n  console.log(\"Environment:\", process.env.NODE_ENV);\n\n  // Create the browser window.\n  mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: path.join(__dirname, \"../preload/preload.js\"),\n    },\n    resizable: true,\n    minimizable: true,\n    maximizable: false,\n    fullscreenable: false,\n    // Round corners on Windows 11\n    roundedCorners: true,\n    backgroundMaterial: \"acrylic\",\n    darkTheme: true,\n    backgroundColor: \"#00000000\",\n  });\n\n  // Setup IPC handlers\n  ipcMain.on(\"start-listening\", () => {\n    keyboardService?.startListening();\n  });\n\n  ipcMain.on(\"stop-listening\", () => {\n    keyboardService?.stopListening();\n  });\n\n  // Add handler for getting keyboard service state\n  ipcMain.handle(\"get-keyboard-service-state\", () => {\n    return keyboardService?.isRunning() || false;\n  });\n  // HyperKey config handlers\n  ipcMain.handle(\"get-hyperkey-config\", async () => {\n    try {\n      const store = Store.getInstance();\n      const feature = await store.getFeature(\"hyperKey\");\n      if (!feature) {\n        throw new Error(\"HyperKey feature not found\");\n      }\n      return feature.config;\n    } catch (err) {\n      console.error(\"Failed to get HyperKey config:\", err);\n      throw err; // Re-throw to let renderer handle error\n    }\n  });\n\n  ipcMain.handle(\"set-hyperkey-config\", async (event, config) => {\n    const store = Store.getInstance();\n    await store.update((draft) => {\n      const hyperkeyFeature = draft.features.find((f) => f.name == \"hyperKey\");\n      if (hyperkeyFeature) {\n        hyperkeyFeature.config = config;\n      }\n    });\n\n    await keyboardService?.restartWithConfig(config);\n  });\n\n  // Load appropriate content based on environment\n  if (process.env.NODE_ENV === \"development\") {\n    mainWindow.loadURL(\"http://localhost:5173\");\n  } else {\n    // In production, load the built index.html file\n    mainWindow.loadFile(path.join(__dirname, \"../dist/index.html\"));\n  }\n\n  // Hide window instead of closing when user clicks X\n  mainWindow.on(\"close\", (event) => {\n    if (!(mainWindow as any).isQuitting) {\n      event.preventDefault();\n      mainWindow?.hide();\n      return false;\n    }\n  });\n};\n\n// Add window control handlers\nipcMain.on(\"minimize-window\", () => {\n  mainWindow?.minimize();\n});\n\nipcMain.on(\"close-window\", () => {\n  mainWindow?.hide();\n});\n\n// This method will be called when Electron has finished initialization\napp.whenReady().then(async () => {\n  const store = Store.getInstance();\n  await store.load(); // Load state before creating window\n\n  // Initialize keyboard service first\n  keyboardService = new KeyboardService();\n  await keyboardService.init(); // This will auto-start if enabled in settings\n\n  // Then create window\n  await createWindow();\n  if (mainWindow) {\n    keyboardService.setMainWindow(mainWindow);\n  }\n\n  // Initialize tray feature after window is created\n  if (mainWindow && keyboardService) {\n    trayFeature = new TrayFeature(mainWindow, keyboardService);\n    await trayFeature.initialize();\n  }\n\n  // Startup settings\n  ipcMain.handle(\"get-startup-settings\", async () => {\n    const { enableOnStartup, startupOnBoot } = store.getState();\n    return { startupOnBoot, enableOnStartup };\n  });\n\n  ipcMain.handle(\"set-startup-on-boot\", async (_, enabled: boolean) => {\n    await store.setStartupOnBoot(enabled);\n  });\n\n  ipcMain.handle(\"set-enable-on-startup\", async (_, enabled: boolean) => {\n    await store.setStartupOnBoot(enabled);\n  });\n\n  // Store state\n  ipcMain.handle(\"get-full-state\", async () => {\n    return keyboardService.getState();\n  });\n\n  // Window controls\n  ipcMain.on(\"minimize-window\", () => {\n    mainWindow?.minimize();\n  });\n});\n\n// Add proper cleanup\napp.on(\"before-quit\", () => {\n  if (keyboardService) {\n    keyboardService.dispose();\n  }\n  if (trayFeature) {\n    trayFeature.dispose();\n  }\n  globalShortcut.unregisterAll();\n});\n\n// Quit when all windows are closed, except on macOS\napp.on(\"window-all-closed\", () => {\n  if (process.platform !== \"darwin\") {\n    app.quit();\n  }\n});\n\napp.on(\"activate\", () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});\n"],"names":["path","app","fs","spawn","_a","_b","dialog","mainWindow","keyboardService","nativeImage","Tray","Menu","globalShortcut","BrowserWindow","ipcMain"],"mappings":"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","x_google_ignoreList":[0]}