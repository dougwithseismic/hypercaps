{"version":3,"file":"main.js","sources":["../../../../node_modules/.pnpm/immer@10.1.1/node_modules/immer/dist/immer.mjs","../../../../node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.mjs","../../electron/features/hyperkeys/types/hyperkey-feature.ts","../../electron/services/store/types/feature-config.ts","../../electron/services/store/types/app-state.ts","../../electron/services/store/index.ts","../../electron/services/queue/index.ts","../../electron/services/ipc/types.ts","../../electron/services/ipc/index.ts","../../electron/features/hyperkeys/keyboard-service.ts","../../../../node_modules/.pnpm/uuid@11.0.5/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@11.0.5/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@11.0.5/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@11.0.5/node_modules/uuid/dist/esm-browser/v4.js","../../electron/features/shortcut-manager/shortcut-service.ts","../../electron/features/tray.ts","../../electron/main.ts"],"sourcesContent":["// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Reflect.ownKeys(obj).forEach((key) => {\n      iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  const isPlain = isPlainObject(base);\n  if (strict === true || strict === \"class_only\" && !isPlain) {\n    const descriptors = Object.getOwnPropertyDescriptors(base);\n    delete descriptors[DRAFT_STATE];\n    let keys = Reflect.ownKeys(descriptors);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const desc = descriptors[key];\n      if (desc.writable === false) {\n        desc.writable = true;\n        desc.configurable = true;\n      }\n      if (desc.get || desc.set)\n        descriptors[key] = {\n          configurable: true,\n          writable: true,\n          // could live with !!desc.set as well here...\n          enumerable: desc.enumerable,\n          value: base[key]\n        };\n    }\n    return Object.create(getPrototypeOf(base), descriptors);\n  } else {\n    const proto = getPrototypeOf(base);\n    if (proto !== null && isPlain) {\n      return { ...base };\n    }\n    const obj = Object.create(proto);\n    return Object.assign(obj, base);\n  }\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    Object.entries(obj).forEach(([key, value]) => freeze(value, true));\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path)\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if ((!parentState || !parentState.scope_.parent_) && typeof prop !== \"symbol\" && Object.prototype.propertyIsEnumerable.call(targetObject, prop))\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import { z } from \"zod\";\r\n\r\nexport const HyperKeyFeatureConfigSchema = z.object({\r\n  isHyperKeyEnabled: z.boolean(),\r\n  trigger: z.string(),\r\n  modifiers: z.array(z.string()),\r\n  capsLockBehavior: z.enum([\"None\", \"DoublePress\", \"BlockToggle\"]).optional(),\r\n});\r\nexport type HyperKeyFeatureConfig = z.infer<typeof HyperKeyFeatureConfigSchema>;\r\n","import { z } from \"zod\";\r\nimport { HyperKeyFeatureConfigSchema } from \"@electron/features/hyperkeys/types/hyperkey-feature\";\r\n\r\n// Available features in HyperCaps\r\nexport const FeatureNameSchema = z.enum([\r\n  \"hyperKey\", // Trigger key functionality\r\n  \"shortcutManager\", // Shortcut management\r\n]);\r\nexport type FeatureName = z.infer<typeof FeatureNameSchema>;\r\n\r\n// Define shortcut manager schema\r\nexport const ShortcutManagerConfigSchema = z.object({\r\n  shortcuts: z.array(\r\n    z.object({\r\n      id: z.string(),\r\n      name: z.string(),\r\n      triggerKey: z.string(),\r\n      action: z.object({\r\n        type: z.literal(\"launch\"),\r\n        program: z.string(),\r\n      }),\r\n      enabled: z.boolean(),\r\n    })\r\n  ),\r\n  isEnabled: z.boolean(),\r\n});\r\n\r\n// Feature-specific configurations\r\nexport const FeatureConfigSchema = z.object({\r\n  hyperKey: HyperKeyFeatureConfigSchema,\r\n  shortcutManager: ShortcutManagerConfigSchema,\r\n});\r\nexport type FeatureConfig = z.infer<typeof FeatureConfigSchema>;\r\n\r\n// Generic feature structure\r\nexport const FeatureSchema = z.object({\r\n  name: FeatureNameSchema,\r\n  isFeatureEnabled: z.boolean(),\r\n  enableFeatureOnStartup: z.boolean(),\r\n  config: z.any(), // Typed through generic\r\n});\r\n\r\nexport type Feature<T extends FeatureName> = {\r\n  name: T;\r\n  isFeatureEnabled: boolean;\r\n  enableFeatureOnStartup: boolean;\r\n  config: FeatureConfig[T];\r\n};\r\n","import { z } from \"zod\";\r\nimport { FeatureSchema } from \"./feature-config\";\r\n\r\n// Application-level settings\r\nexport const AppSettingsSchema = z.object({\r\n  startupOnBoot: z.boolean(), // Launch with Windows\r\n  startMinimized: z.boolean(), // Start in system tray\r\n});\r\nexport type AppSettings = z.infer<typeof AppSettingsSchema>;\r\n\r\n// Complete application state\r\nexport const AppStateSchema = z.object({\r\n  settings: AppSettingsSchema, // Application settings\r\n  features: z.array(FeatureSchema), // Feature states\r\n});\r\n\r\nexport type AppState = z.infer<typeof AppStateSchema>;\r\n","/**\r\n * Store Service\r\n *\r\n * Handles persistent configuration and feature settings.\r\n * This service is separate from the MessageQueue, which handles real-time events.\r\n *\r\n * Key responsibilities:\r\n * 1. Persistent configuration storage\r\n * 2. Feature settings management\r\n * 3. State migration between versions\r\n * 4. Startup preferences\r\n *\r\n * This store ensures:\r\n * - Configuration persists between app restarts\r\n * - Settings are properly migrated during updates\r\n * - Feature states are consistently maintained\r\n *\r\n * @note This is NOT for real-time state - use MessageQueue service for that\r\n */\r\n\r\nimport { app } from \"electron\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport { produce } from \"immer\";\r\nimport { z } from \"zod\";\r\nimport { AppState, AppStateSchema } from \"./types/app-state\";\r\nimport { Feature, FeatureName } from \"./types/feature-config\";\r\nimport { EventEmitter } from \"events\";\r\n\r\n// Get version from package.json\r\nconst pkg = require(path.join(app.getAppPath(), \"package.json\"));\r\nconst CURRENT_STATE_VERSION = pkg.version;\r\n\r\n// Version when each migration was introduced\r\ntype MigrationFunction = (state: AppState) => AppState;\r\ninterface Migration {\r\n  version: string;\r\n  schema: z.ZodType<any>;\r\n  migrate: MigrationFunction;\r\n}\r\n\r\nconst MIGRATIONS: Migration[] = [\r\n  {\r\n    version: \"0.1.0\",\r\n    schema: AppStateSchema.extend({\r\n      features: z.array(\r\n        z.object({\r\n          name: z.enum([\"hyperKey\", \"shortcutManager\"]),\r\n          isFeatureEnabled: z.boolean(),\r\n          // enableFeatureOnStartup might not exist yet\r\n          config: z.any(),\r\n        })\r\n      ),\r\n    }),\r\n    migrate: (state: AppState) => {\r\n      console.log(\"[Store] Migrating state to version 0.1.0\");\r\n      return produce(state, (draft) => {\r\n        // Migrate features to include enableFeatureOnStartup\r\n        draft.features?.forEach((feature) => {\r\n          if (!(\"enableFeatureOnStartup\" in feature)) {\r\n            feature.enableFeatureOnStartup = feature.isFeatureEnabled || false;\r\n          }\r\n        });\r\n\r\n        // Ensure settings object exists\r\n        if (!draft.settings) {\r\n          draft.settings = {\r\n            startupOnBoot: false,\r\n            startMinimized: false,\r\n          };\r\n        }\r\n      });\r\n    },\r\n  },\r\n  // Add future migrations here\r\n  // {\r\n  //   version: \"0.2.0\",\r\n  //   schema: AppStateSchema.extend({ /* expected schema before migration */ }),\r\n  //   migrate: (state) => { /* migration logic */ }\r\n  // }\r\n];\r\n\r\ninterface VersionedState {\r\n  version: string;\r\n  state: AppState;\r\n}\r\n\r\nconst DEFAULT_STATE: AppState = {\r\n  settings: {\r\n    startupOnBoot: false,\r\n    startMinimized: false,\r\n  },\r\n  features: [\r\n    {\r\n      name: \"hyperKey\",\r\n      isFeatureEnabled: true,\r\n      enableFeatureOnStartup: true,\r\n      config: {\r\n        isHyperKeyEnabled: true,\r\n        trigger: \"CapsLock\",\r\n        modifiers: [],\r\n        capsLockBehavior: \"BlockToggle\",\r\n      },\r\n    },\r\n    {\r\n      name: \"shortcutManager\",\r\n      isFeatureEnabled: true,\r\n      enableFeatureOnStartup: true,\r\n      config: {\r\n        shortcuts: [],\r\n        isEnabled: true,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport class Store extends EventEmitter {\r\n  private static instance: Store;\r\n  private state: AppState = DEFAULT_STATE;\r\n  private statePath: string;\r\n\r\n  private constructor() {\r\n    super();\r\n    this.statePath =\r\n      process.env.NODE_ENV === \"development\"\r\n        ? path.join(app.getAppPath(), \"state.json\")\r\n        : path.join(app.getPath(\"userData\"), \"state.json\");\r\n  }\r\n\r\n  public static getInstance(): Store {\r\n    if (!Store.instance) {\r\n      Store.instance = new Store();\r\n    }\r\n    return Store.instance;\r\n  }\r\n\r\n  public getState(): AppState {\r\n    return this.state;\r\n  }\r\n\r\n  private compareVersions(a: string, b: string): number {\r\n    const partsA = a.split(\".\").map(Number);\r\n    const partsB = b.split(\".\").map(Number);\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      const partA = partsA[i] || 0;\r\n      const partB = partsB[i] || 0;\r\n      if (partA !== partB) return partA - partB;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private validateState(state: unknown, schema: z.ZodType<any>): AppState {\r\n    try {\r\n      return schema.parse(state);\r\n    } catch (error) {\r\n      console.error(\"[Store] State validation failed:\", error);\r\n      if (error instanceof z.ZodError) {\r\n        console.error(\r\n          \"[Store] Validation errors:\",\r\n          JSON.stringify(error.errors, null, 2)\r\n        );\r\n      }\r\n      console.warn(\"[Store] Falling back to default state\");\r\n      return DEFAULT_STATE;\r\n    }\r\n  }\r\n\r\n  private migrateState(versionedState: Partial<VersionedState>): AppState {\r\n    const version = versionedState.version || \"0.0.0\";\r\n    let state = versionedState.state || DEFAULT_STATE;\r\n\r\n    // Sort migrations by version\r\n    const sortedMigrations = [...MIGRATIONS].sort((a, b) =>\r\n      this.compareVersions(a.version, b.version)\r\n    );\r\n\r\n    // Apply each migration if needed\r\n    for (const migration of sortedMigrations) {\r\n      if (this.compareVersions(version, migration.version) < 0) {\r\n        console.log(\r\n          `[Store] Validating state before migration ${migration.version}`\r\n        );\r\n\r\n        // Validate state before migration\r\n        state = this.validateState(state, migration.schema);\r\n\r\n        console.log(\r\n          `[Store] Running migration for version ${migration.version}`\r\n        );\r\n        state = migration.migrate(state);\r\n\r\n        console.log(\r\n          `[Store] Validating state after migration ${migration.version}`\r\n        );\r\n        // Validate state after migration with the next migration's schema (or current app schema)\r\n        const nextMigration = sortedMigrations.find(\r\n          (m) => this.compareVersions(migration.version, m.version) < 0\r\n        );\r\n        state = this.validateState(\r\n          state,\r\n          nextMigration?.schema || AppStateSchema\r\n        );\r\n      }\r\n    }\r\n\r\n    // Final validation with current app schema\r\n    return this.validateState(state, AppStateSchema);\r\n  }\r\n\r\n  public async load(): Promise<void> {\r\n    try {\r\n      if (fs.existsSync(this.statePath)) {\r\n        const data = await fs.promises.readFile(this.statePath, \"utf-8\");\r\n        const versionedState = JSON.parse(data) as Partial<VersionedState>;\r\n\r\n        // Migrate state if needed\r\n        this.state = this.migrateState(versionedState);\r\n\r\n        // Save migrated state if version was old\r\n        if (\r\n          !versionedState.version ||\r\n          this.compareVersions(versionedState.version, CURRENT_STATE_VERSION) <\r\n            0\r\n        ) {\r\n          await this.save();\r\n        }\r\n      } else {\r\n        this.state = DEFAULT_STATE;\r\n        await this.save();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to load state:\", error);\r\n      this.state = DEFAULT_STATE;\r\n      await this.save();\r\n    }\r\n  }\r\n\r\n  private async save(): Promise<void> {\r\n    try {\r\n      const versionedState: VersionedState = {\r\n        version: CURRENT_STATE_VERSION,\r\n        state: this.state,\r\n      };\r\n\r\n      await fs.promises.writeFile(\r\n        this.statePath,\r\n        JSON.stringify(versionedState, null, 2),\r\n        \"utf-8\"\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to save state:\", error);\r\n    }\r\n  }\r\n\r\n  public async update(updater: (draft: AppState) => void): Promise<void> {\r\n    this.state = produce(this.state, updater);\r\n    await this.save();\r\n    // Emit state change event\r\n    this.emit(\"stateChanged\", this.state);\r\n  }\r\n\r\n  public async getFeature<T extends FeatureName>(\r\n    name: T\r\n  ): Promise<Feature<T> | undefined> {\r\n    const feature = this.state.features?.find((f) => f.name === name);\r\n    return feature as Feature<T> | undefined;\r\n  }\r\n}\r\n","/**\r\n * MessageQueue Service\r\n *\r\n * Handles real-time event processing and transient state management.\r\n * This service is separate from the Store service, which handles persistent configuration.\r\n *\r\n * Key responsibilities:\r\n * 1. Real-time event ordering (keyboard events, state updates)\r\n * 2. Transient state management (service status, current key states)\r\n * 3. Immediate state propagation to renderer\r\n *\r\n * This queue ensures:\r\n * - Events are processed in order with priority\r\n * - State updates are atomic and consistent\r\n * - Failed operations can be retried\r\n * - Resource cleanup happens properly\r\n *\r\n * @note This is NOT for persistent storage - use Store service for that\r\n */\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport crypto from \"crypto\";\r\nimport {\r\n  QueuedMessage,\r\n  MessageQueueOptions,\r\n  MessageHandler,\r\n  MessageQueueEvents,\r\n} from \"./types\";\r\n\r\nconst DEFAULT_OPTIONS: Required<MessageQueueOptions> = {\r\n  maxConcurrent: 1,\r\n  maxRetries: 3,\r\n  retryDelay: 1000,\r\n  timeout: 30000,\r\n};\r\n\r\nfunction generateId(): string {\r\n  return crypto.randomBytes(16).toString(\"hex\");\r\n}\r\n\r\nexport class MessageQueue extends EventEmitter {\r\n  private static instance: MessageQueue;\r\n  private messages: QueuedMessage[] = [];\r\n  private processing: Set<string> = new Set();\r\n  private handlers: Map<string, MessageHandler> = new Map();\r\n  private options: Required<MessageQueueOptions>;\r\n  private timeouts: Map<string, NodeJS.Timeout> = new Map();\r\n\r\n  private constructor(options: MessageQueueOptions = {}) {\r\n    super();\r\n    this.options = { ...DEFAULT_OPTIONS, ...options };\r\n  }\r\n\r\n  /**\r\n   * Singleton instance ensures all events go through the same queue\r\n   * This is critical for maintaining event order and state consistency\r\n   */\r\n  public static getInstance(options?: MessageQueueOptions): MessageQueue {\r\n    if (!MessageQueue.instance) {\r\n      MessageQueue.instance = new MessageQueue(options);\r\n    }\r\n    return MessageQueue.instance;\r\n  }\r\n\r\n  /**\r\n   * Register a handler for a specific message type\r\n   * Handlers should be fast and only handle transient state\r\n   * For persistent changes, handlers should delegate to Store service\r\n   */\r\n  public registerHandler<T>(type: string, handler: MessageHandler<T>): void {\r\n    this.handlers.set(type, handler as MessageHandler);\r\n  }\r\n\r\n  /**\r\n   * Enqueue a message for processing\r\n   * Higher priority messages jump the queue but maintain order within their priority level\r\n   * @param type Message type that maps to a registered handler\r\n   * @param payload Data to be processed\r\n   * @param priority Higher numbers = higher priority (default 0)\r\n   * @returns Message ID for tracking\r\n   */\r\n  public async enqueue<T>(\r\n    type: string,\r\n    payload: T,\r\n    priority = 0\r\n  ): Promise<string> {\r\n    const message: QueuedMessage<T> = {\r\n      id: generateId(),\r\n      type,\r\n      payload,\r\n      timestamp: Date.now(),\r\n      priority,\r\n      retries: 0,\r\n      maxRetries: this.options.maxRetries,\r\n      status: \"pending\",\r\n    };\r\n\r\n    this.messages.push(message);\r\n    this.messages.sort(\r\n      (a, b) => b.priority - a.priority || a.timestamp - b.timestamp\r\n    );\r\n\r\n    this.emit(\"message:added\", message);\r\n    this.processQueue();\r\n\r\n    return message.id;\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.processing.size >= this.options.maxConcurrent) {\r\n      return;\r\n    }\r\n\r\n    const pendingMessages = this.messages.filter(\r\n      (m) => m.status === \"pending\" && !this.processing.has(m.id)\r\n    );\r\n\r\n    if (pendingMessages.length === 0) {\r\n      if (this.processing.size === 0) {\r\n        this.emit(\"queue:empty\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    const message = pendingMessages[0];\r\n    const handler = this.handlers.get(message.type);\r\n\r\n    if (!handler) {\r\n      message.status = \"failed\";\r\n      message.error = new Error(\r\n        `No handler registered for message type: ${message.type}`\r\n      );\r\n      this.emit(\"message:failed\", message);\r\n      return;\r\n    }\r\n\r\n    this.processing.add(message.id);\r\n    message.status = \"processing\";\r\n    this.emit(\"message:started\", message);\r\n\r\n    // Set timeout\r\n    const timeout = setTimeout(() => {\r\n      this.handleTimeout(message);\r\n    }, this.options.timeout);\r\n    this.timeouts.set(message.id, timeout);\r\n\r\n    try {\r\n      await handler(message);\r\n      this.handleSuccess(message);\r\n    } catch (error) {\r\n      this.handleError(message, error as Error);\r\n    }\r\n  }\r\n\r\n  private handleSuccess(message: QueuedMessage): void {\r\n    this.clearTimeout(message.id);\r\n    this.processing.delete(message.id);\r\n    message.status = \"completed\";\r\n    this.emit(\"message:completed\", message);\r\n    this.messages = this.messages.filter((m) => m.id !== message.id);\r\n    this.processQueue();\r\n  }\r\n\r\n  private handleError(message: QueuedMessage, error: Error): void {\r\n    this.clearTimeout(message.id);\r\n    this.processing.delete(message.id);\r\n    message.error = error;\r\n\r\n    if (message.retries < message.maxRetries) {\r\n      message.retries++;\r\n      message.status = \"pending\";\r\n      this.emit(\"message:retrying\", message);\r\n      setTimeout(() => this.processQueue(), this.options.retryDelay);\r\n    } else {\r\n      message.status = \"failed\";\r\n      this.emit(\"message:failed\", message);\r\n      this.messages = this.messages.filter((m) => m.id !== message.id);\r\n      this.processQueue();\r\n    }\r\n  }\r\n\r\n  private handleTimeout(message: QueuedMessage): void {\r\n    this.processing.delete(message.id);\r\n    message.error = new Error(\r\n      `Message processing timed out after ${this.options.timeout}ms`\r\n    );\r\n    this.handleError(message, message.error);\r\n  }\r\n\r\n  private clearTimeout(messageId: string): void {\r\n    const timeout = this.timeouts.get(messageId);\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n      this.timeouts.delete(messageId);\r\n    }\r\n  }\r\n\r\n  public getQueueStatus(): {\r\n    pending: number;\r\n    processing: number;\r\n    total: number;\r\n  } {\r\n    return {\r\n      pending: this.messages.filter((m) => m.status === \"pending\").length,\r\n      processing: this.processing.size,\r\n      total: this.messages.length,\r\n    };\r\n  }\r\n\r\n  public clearQueue(): void {\r\n    this.messages = [];\r\n    this.processing.clear();\r\n    this.timeouts.forEach((timeout) => clearTimeout(timeout));\r\n    this.timeouts.clear();\r\n  }\r\n}\r\n\r\n// Type assertion for EventEmitter\r\nexport interface MessageQueue {\r\n  on<K extends keyof MessageQueueEvents>(\r\n    event: K,\r\n    listener: MessageQueueEvents[K]\r\n  ): this;\r\n  emit<K extends keyof MessageQueueEvents>(\r\n    event: K,\r\n    ...args: Parameters<MessageQueueEvents[K]>\r\n  ): boolean;\r\n}\r\n","/**\r\n * Core IPC types for service communication\r\n */\r\n\r\n/**\r\n * Represents a command to be executed by a service\r\n */\r\nexport interface IPCCommand<TParams = unknown> {\r\n  /** Service identifier */\r\n  service: string;\r\n  /** Action to perform */\r\n  action: string;\r\n  /** Optional parameters */\r\n  params?: TParams;\r\n}\r\n\r\n/**\r\n * Result of an IPC command execution\r\n */\r\nexport interface IPCResult<TData = unknown> {\r\n  success: boolean;\r\n  data?: TData;\r\n  error?: IPCError;\r\n}\r\n\r\n/**\r\n * Standard error format for IPC operations\r\n */\r\nexport interface IPCError {\r\n  code: string;\r\n  message: string;\r\n  details?: unknown;\r\n}\r\n\r\n/**\r\n * Event emitted by a service\r\n */\r\nexport interface IPCEvent<TData = unknown> {\r\n  service: string;\r\n  event: string;\r\n  data: TData;\r\n}\r\n\r\n/**\r\n * Handler for IPC events\r\n */\r\nexport type IPCEventHandler<TData = unknown> = (event: IPCEvent<TData>) => void;\r\n\r\n/**\r\n * Unsubscribe function for event handlers\r\n */\r\nexport type IPCUnsubscribe = () => void;\r\n\r\n/**\r\n * Configuration for registering a service\r\n */\r\nexport interface ServiceConfig {\r\n  /** Unique service identifier */\r\n  id: string;\r\n  /** Optional message priority (1-5, lower is higher priority) */\r\n  priority?: number;\r\n  /** Optional timeout for commands in ms */\r\n  timeout?: number;\r\n}\r\n\r\n/**\r\n * Service registration info\r\n */\r\nexport interface RegisteredService {\r\n  config: ServiceConfig;\r\n  handlers: Map<string, IPCHandler>;\r\n}\r\n\r\n/**\r\n * Handler for executing service commands\r\n */\r\nexport type IPCHandler<TParams = unknown, TResult = unknown> = (\r\n  params: TParams\r\n) => Promise<TResult>;\r\n\r\n/**\r\n * Helper to create standardized results\r\n */\r\nexport const createResult = <T>(data: T): IPCResult<T> => ({\r\n  success: true,\r\n  data,\r\n});\r\n\r\n/**\r\n * Helper to create standardized errors\r\n */\r\nexport const createError = (\r\n  code: string,\r\n  message: string,\r\n  details?: unknown\r\n): IPCResult => ({\r\n  success: false,\r\n  error: { code, message, details },\r\n});\r\n","import { ipcMain, BrowserWindow } from \"electron\";\nimport { MessageQueue } from \"../queue\";\nimport {\n  IPCCommand,\n  IPCResult,\n  ServiceConfig,\n  RegisteredService,\n  IPCHandler,\n  IPCEvent,\n  createError,\n  createResult,\n} from \"./types\";\n\n/**\n * Core IPC service that handles communication between main and renderer processes\n * Uses MessageQueue internally for reliable message ordering and delivery\n */\nexport class IPCService {\n  private static instance: IPCService;\n  private services: Map<string, RegisteredService>;\n  private queue: MessageQueue;\n  private eventHandlers: Map<string, Map<string, Set<IPCHandler>>>;\n\n  private constructor() {\n    this.services = new Map();\n    this.queue = MessageQueue.getInstance();\n    this.eventHandlers = new Map();\n    this.setupIPC();\n  }\n\n  /**\n   * Get the singleton instance\n   */\n  public static getInstance(): IPCService {\n    if (!IPCService.instance) {\n      IPCService.instance = new IPCService();\n    }\n    return IPCService.instance;\n  }\n\n  /**\n   * Register a service with the IPC system\n   */\n  public registerService(config: ServiceConfig): RegisteredService {\n    if (this.services.has(config.id)) {\n      throw new Error(`Service ${config.id} is already registered`);\n    }\n\n    const service: RegisteredService = {\n      config,\n      handlers: new Map(),\n    };\n\n    this.services.set(config.id, service);\n    return service;\n  }\n\n  /**\n   * Register a handler for a specific service action\n   */\n  public registerHandler<TParams = unknown, TResult = unknown>(\n    serviceId: string,\n    action: string,\n    handler: IPCHandler<TParams, TResult>\n  ): void {\n    const service = this.services.get(serviceId);\n    if (!service) {\n      throw new Error(`Service ${serviceId} not found`);\n    }\n\n    service.handlers.set(action, handler);\n\n    // Also register as an event handler\n    if (!this.eventHandlers.has(serviceId)) {\n      this.eventHandlers.set(serviceId, new Map());\n    }\n    const serviceHandlers = this.eventHandlers.get(serviceId)!;\n    if (!serviceHandlers.has(action)) {\n      serviceHandlers.set(action, new Set());\n    }\n    serviceHandlers.get(action)!.add(handler as IPCHandler);\n  }\n\n  /**\n   * Emit an event to all renderer processes and main process handlers\n   */\n  public emit<TData = unknown>(event: IPCEvent<TData>): void {\n    console.log(\"[IPCService] Emitting event:\", event);\n    // Queue the event emission to maintain ordering\n    this.queue.enqueue(\n      \"ipc:event\",\n      async () => {\n        console.log(\"[IPCService] Processing queued event:\", event);\n\n        // Send to browser windows\n        const windows = BrowserWindow.getAllWindows();\n        windows.forEach((window) => {\n          console.log(\"[IPCService] Sending event to window:\", window.id);\n          window.webContents.send(\"ipc:event\", event);\n        });\n\n        // Send to main process handlers\n        const serviceHandlers = this.eventHandlers.get(event.service);\n        if (serviceHandlers) {\n          const handlers = serviceHandlers.get(event.event);\n          if (handlers) {\n            console.log(\n              `[IPCService] Found ${handlers.size} handlers for ${event.service}:${event.event}`\n            );\n            for (const handler of handlers) {\n              try {\n                await handler(event.data);\n              } catch (error) {\n                console.error(\n                  `[IPCService] Handler error for ${event.service}:${event.event}:`,\n                  error\n                );\n              }\n            }\n          }\n        }\n      },\n      1\n    ); // High priority for events\n  }\n\n  /**\n   * Unregister a service\n   */\n  public unregisterService(serviceId: string): void {\n    this.services.delete(serviceId);\n    this.eventHandlers.delete(serviceId);\n  }\n\n  /**\n   * Set up IPC listeners\n   */\n  private setupIPC(): void {\n    // Handle incoming commands\n    ipcMain.handle(\"ipc:command\", async (_, command: IPCCommand) => {\n      try {\n        return await this.handleCommand(command);\n      } catch (error) {\n        return createError(\n          \"COMMAND_ERROR\",\n          error instanceof Error ? error.message : \"Unknown error\",\n          error\n        );\n      }\n    });\n\n    // Register queue handler for events\n    this.queue.registerHandler(\"ipc:event\", async (message) => {\n      const event = message.payload as () => Promise<void>;\n      await event();\n    });\n\n    // Register queue handler for command execution\n    this.queue.registerHandler<() => Promise<unknown>>(\n      \"ipc:execute\",\n      async (message) => {\n        const handler = message.payload;\n        await handler();\n      }\n    );\n  }\n\n  /**\n   * Handle an incoming command\n   */\n  private async handleCommand<TParams = unknown, TResult = unknown>(\n    command: IPCCommand<TParams>\n  ): Promise<IPCResult<TResult>> {\n    const service = this.services.get(command.service);\n    if (!service) {\n      return createError(\n        \"SERVICE_NOT_FOUND\",\n        `Service ${command.service} not found`\n      ) as IPCResult<TResult>;\n    }\n\n    const handler = service.handlers.get(command.action) as IPCHandler<\n      TParams,\n      TResult\n    >;\n    if (!handler) {\n      return createError(\n        \"HANDLER_NOT_FOUND\",\n        `Handler for ${command.service}:${command.action} not found`\n      ) as IPCResult<TResult>;\n    }\n\n    try {\n      // Execute handler directly instead of using queue\n      const result = await handler(command.params || ({} as TParams));\n      return createResult(result) as IPCResult<TResult>;\n    } catch (error) {\n      return createError(\n        \"EXECUTION_ERROR\",\n        error instanceof Error ? error.message : \"Unknown error\",\n        error\n      ) as IPCResult<TResult>;\n    }\n  }\n}\n\n// Export singleton instance\nexport const ipc = IPCService.getInstance();\n","/**\n * Keyboard Service\n *\n * Coordinates between real-time keyboard events and persistent configuration.\n * Uses both MessageQueue (for real-time events) and Store (for configuration).\n *\n * Architecture:\n * - MessageQueue: Handles real-time keyboard events and state updates\n * - Store: Manages feature configuration and persistent settings\n *\n * Data Flow:\n * 1. PowerShell script sends keyboard events\n * 2. Events are queued via MessageQueue for ordered processing\n * 3. Configuration changes are persisted via Store\n * 4. State updates are propagated to renderer via MessageQueue\n */\n\nimport { BrowserWindow, dialog, app } from \"electron\";\nimport { spawn, ChildProcess } from \"child_process\";\nimport { EventEmitter } from \"events\";\nimport path from \"path\";\nimport { Store } from \"@electron/services/store\";\nimport { MessageQueue } from \"@electron/services/queue\";\nimport { ipc } from \"@electron/services/ipc\";\nimport { HyperKeyFeatureConfig } from \"./types/hyperkey-feature\";\nimport { KeyboardService as KeyboardServiceType } from \"./types/keyboard-ipc\";\n\ninterface KeyboardState {\n  pressedKeys: string[];\n  timestamp: number;\n}\n\ninterface ServiceState {\n  isListening: boolean;\n  isLoading: boolean;\n  isStarting: boolean;\n  isHyperKeyEnabled: boolean;\n  error?: string;\n  lastError?: {\n    message: string;\n    timestamp: number;\n  };\n}\n\nexport class KeyboardService extends EventEmitter {\n  private mainWindow: BrowserWindow | null = null;\n  private keyboardProcess: ChildProcess | null = null;\n  private store: Store;\n  private queue: MessageQueue;\n  private startupTimeout: NodeJS.Timeout | null = null;\n  private state: ServiceState = {\n    isListening: false,\n    isLoading: false,\n    isStarting: false,\n    isHyperKeyEnabled: false,\n  };\n\n  constructor() {\n    super();\n    this.store = Store.getInstance();\n    this.queue = MessageQueue.getInstance();\n    this.setupQueueHandlers();\n    this.setupIPCHandlers();\n  }\n\n  /**\n   * Set up IPC service handlers\n   */\n  private setupIPCHandlers(): void {\n    // Register keyboard service\n    ipc.registerService({\n      id: \"keyboard\",\n      priority: 1, // High priority for keyboard events\n    });\n\n    // Register command handlers\n    ipc.registerHandler(\"keyboard\", \"start\", async () => {\n      await this.startListening();\n      return this.getState();\n    });\n\n    ipc.registerHandler(\"keyboard\", \"stop\", async () => {\n      await this.stopListening();\n      return this.getState();\n    });\n\n    ipc.registerHandler(\n      \"keyboard\",\n      \"restart\",\n      async (params: KeyboardServiceType[\"commands\"][\"restart\"]) => {\n        await this.restartWithConfig(params.config);\n        return this.getState();\n      }\n    );\n\n    ipc.registerHandler(\"keyboard\", \"getState\", async () => {\n      return this.getState();\n    });\n  }\n\n  private setupQueueHandlers(): void {\n    this.queue.registerHandler(\"setState\", async (message) => {\n      console.log(\"[KeyboardService] Handling setState:\", message.payload);\n      const updates = message.payload as Partial<ServiceState>;\n      this.state = { ...this.state, ...updates };\n      this.mainWindow?.webContents.send(\"keyboard-service-state\", {\n        ...this.state,\n        isRunning: this.isRunning(),\n      });\n      console.log(\"[KeyboardService] Emitting state changed event:\", {\n        ...this.state,\n        isRunning: this.isRunning(),\n      });\n      ipc.emit({\n        service: \"keyboard\",\n        event: \"stateChanged\",\n        data: {\n          ...this.state,\n          isRunning: this.isRunning(),\n        },\n      });\n      this.emit(\"state-change\", this.state);\n    });\n\n    this.queue.registerHandler(\"keyboardEvent\", async (message) => {\n      // console.log(\n      //   \"[KeyboardService] Handling keyboard event:\",\n      //   message.payload\n      // );\n      this.mainWindow?.webContents.send(\"keyboard-event\", message.payload);\n      // console.log(\n      //   \"[KeyboardService] Emitting keyPressed event:\",\n      //   message.payload\n      // );\n      ipc.emit({\n        service: \"keyboard\",\n        event: \"keyPressed\",\n        data: message.payload,\n      });\n    });\n\n    this.queue.on(\"message:failed\", (message) => {\n      console.error(`[KeyboardService] Message failed:`, message);\n      if (message.type === \"setState\") {\n        dialog.showErrorBox(\n          \"Keyboard Service Error\",\n          `Failed to update service state: ${message.error?.message}`\n        );\n      }\n    });\n  }\n\n  private setState(updates: Partial<ServiceState>): void {\n    this.queue.enqueue(\"setState\", updates, 1);\n  }\n\n  private getScriptPath(): string {\n    const scriptName = \"keyboard-monitor.ps1\";\n    const scriptSubPath = path.join(\n      \"electron\",\n      \"features\",\n      \"hyperkeys\",\n      \"scripts\",\n      scriptName\n    );\n\n    return process.env.NODE_ENV === \"development\"\n      ? path.join(app.getAppPath(), scriptSubPath)\n      : path.join(process.resourcesPath, scriptSubPath);\n  }\n\n  public async getState(): Promise<ServiceState> {\n    const hyperKey = await this.store.getFeature(\"hyperKey\");\n    return {\n      ...this.state,\n      isHyperKeyEnabled: hyperKey?.config.isHyperKeyEnabled ?? false,\n    };\n  }\n\n  public async init(): Promise<void> {\n    await this.store.load();\n\n    // Get HyperKey feature state\n    const hyperKey = await this.store.getFeature(\"hyperKey\");\n    console.log(\"[KeyboardService] HyperKey feature state:\", hyperKey);\n\n    if (!hyperKey) {\n      this.setState({\n        error: \"HyperKey feature not found\",\n        lastError: {\n          message: \"HyperKey feature not found\",\n          timestamp: Date.now(),\n        },\n      });\n      throw new Error(\"HyperKey feature not found\");\n    }\n\n    // Send initial state to renderer\n    this.mainWindow?.webContents.send(\"hyperkey-state\", {\n      ...hyperKey.config,\n      enabled: hyperKey.isFeatureEnabled,\n    });\n\n    // Auto-start if feature is enabled\n    if (hyperKey.isFeatureEnabled) {\n      await this.startListening();\n    }\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n\n  private async notifyStateUpdate(): Promise<void> {\n    const hyperKeyFeature = await this.store.getFeature(\"hyperKey\");\n    if (hyperKeyFeature) {\n      this.mainWindow?.webContents.send(\"hyperkey-state\", {\n        ...hyperKeyFeature.config,\n        enabled: hyperKeyFeature.isFeatureEnabled,\n      });\n    }\n  }\n\n  public async startListening(): Promise<void> {\n    console.log(\"[KeyboardService] startListening() called\");\n\n    if (this.keyboardProcess) {\n      console.log(\"[KeyboardService] Process already running\");\n      return;\n    }\n\n    const hyperKey = await this.store.getFeature(\"hyperKey\");\n    if (!hyperKey?.isFeatureEnabled) {\n      console.log(\"[KeyboardService] Feature is disabled, not starting\");\n      return;\n    }\n\n    if (this.state.isStarting) {\n      console.log(\"[KeyboardService] Process already starting, waiting...\");\n      await new Promise<void>((resolve) => {\n        const checkInterval = setInterval(() => {\n          if (!this.state.isStarting) {\n            clearInterval(checkInterval);\n            resolve();\n          }\n        }, 100);\n      });\n      if (this.keyboardProcess) return;\n    }\n\n    this.setState({\n      isLoading: true,\n      isStarting: true,\n      error: undefined,\n      lastError: undefined,\n      isListening: false,\n    });\n\n    try {\n      const scriptPath = this.getScriptPath();\n      const hyperKey = await this.store.getFeature(\"hyperKey\");\n\n      if (!hyperKey) {\n        throw new Error(\"HyperKey feature not found\");\n      }\n\n      const config = {\n        isEnabled: hyperKey.isFeatureEnabled,\n        isHyperKeyEnabled: hyperKey.config.isHyperKeyEnabled,\n        trigger: hyperKey.config.trigger,\n        modifiers: hyperKey.config.modifiers || [],\n        capsLockBehavior: hyperKey.config.capsLockBehavior || \"BlockToggle\",\n      };\n\n      const command = [\n        // Enable debug output and set error preferences\n        \"$ProgressPreference = 'SilentlyContinue';\",\n        \"$ErrorActionPreference = 'Stop';\",\n        \"Write-Host '[DEBUG] Starting keyboard monitor...';\",\n\n        // Set up config\n        \"$Config = @{\",\n        `  isEnabled=$${config.isEnabled.toString().toLowerCase()};`,\n        `  isHyperKeyEnabled=$${config.isHyperKeyEnabled.toString().toLowerCase()};`,\n        `  trigger='${config.trigger}';`,\n        `  modifiers=@(${config.modifiers.map((m) => `'${m}'`).join(\",\") || \"@()\"});`,\n        `  capsLockBehavior='${config.capsLockBehavior}';`,\n        \"};\",\n\n        // Debug output config\n        \"Write-Host '[DEBUG] Config:' ($Config | ConvertTo-Json -Depth 10);\",\n\n        // Execute script with proper error handling\n        \"try {\",\n        `  Set-Location '${path.dirname(scriptPath)}';`,\n        `  . '${scriptPath}';`,\n        \"} catch {\",\n        \"  Write-Error $_.Exception.Message;\",\n        \"  Write-Error $_.ScriptStackTrace;\",\n        \"  exit 1;\",\n        \"}\",\n      ].join(\" \");\n\n      console.log(\"[KeyboardService] command\", command);\n      console.log(\"[KeyboardService] Spawning process with command:\", command);\n      console.log(\"[KeyboardService] Script path:\", scriptPath);\n      console.log(\"[KeyboardService] Process env:\", process.env.NODE_ENV);\n\n      // Verify script exists\n      const fs = require(\"fs\");\n      if (!fs.existsSync(scriptPath)) {\n        throw new Error(`Script not found at path: ${scriptPath}`);\n      }\n      console.log(\"[KeyboardService] Script exists at path\");\n\n      this.keyboardProcess = spawn(\"powershell.exe\", [\n        \"-ExecutionPolicy\",\n        \"Bypass\",\n        \"-NoProfile\",\n        \"-NonInteractive\",\n        \"-Command\",\n        command,\n      ]);\n\n      // Check if process started successfully\n      if (!this.keyboardProcess.pid) {\n        throw new Error(\"Failed to start PowerShell process\");\n      }\n      console.log(\n        \"[KeyboardService] Process started with PID:\",\n        this.keyboardProcess.pid\n      );\n\n      await this.setupProcessListeners();\n\n      // Update store on successful start\n      await this.store.update((draft) => {\n        const feature = draft.features.find((f) => f.name === \"hyperKey\");\n        if (feature) {\n          feature.isFeatureEnabled = true;\n        }\n      });\n\n      this.setState({\n        isListening: true,\n        isLoading: false,\n      });\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"Unknown error during startup\";\n      this.setState({\n        isStarting: false,\n        error: errorMessage,\n        lastError: {\n          message: errorMessage,\n          timestamp: Date.now(),\n        },\n      });\n      this.handleStartupFailure(errorMessage);\n    }\n  }\n\n  private async setupProcessListeners(): Promise<void> {\n    if (!this.keyboardProcess) {\n      console.log(\"[KeyboardService] Process not found, returning early\");\n      return;\n    }\n\n    console.log(\"[KeyboardService] Setting up process listeners\");\n\n    return new Promise((resolve, reject) => {\n      let hasReceivedInitialData = false;\n      const cleanup = () => {\n        console.log(\"[KeyboardService] Cleaning up listeners\");\n        if (this.keyboardProcess) {\n          this.keyboardProcess.stdout?.removeAllListeners();\n          this.keyboardProcess.stderr?.removeAllListeners();\n          this.keyboardProcess.removeAllListeners();\n        }\n      };\n\n      // Handle process errors\n      this.keyboardProcess.on(\"error\", (error) => {\n        console.error(\"[KeyboardService] Process error:\", error);\n        cleanup();\n        reject(error);\n      });\n\n      // Handle stdout data\n      this.keyboardProcess.stdout?.on(\"data\", (data) => {\n        const output = data.toString();\n        console.log(\"[KeyboardService] Raw stdout:\", output);\n\n        if (!hasReceivedInitialData) {\n          console.log(\"[KeyboardService] Received initial data\");\n          hasReceivedInitialData = true;\n          this.clearStartupState();\n          resolve();\n        }\n\n        this.handleKeyboardOutput(data);\n      });\n\n      // Handle stderr data\n      this.keyboardProcess.stderr?.on(\"data\", (data) => {\n        const error = data.toString();\n        console.error(\"[KeyboardService] stderr:\", error);\n        if (!hasReceivedInitialData) {\n          cleanup();\n          reject(new Error(error));\n        }\n      });\n\n      // Handle process exit\n      this.keyboardProcess.on(\"close\", (code, signal) => {\n        console.log(\n          \"[KeyboardService] Process closed with code:\",\n          code,\n          \"signal:\",\n          signal\n        );\n        cleanup();\n        this.keyboardProcess = null;\n\n        // Update state to reflect process termination\n        this.setState({\n          isListening: false,\n          isLoading: false,\n          error: code !== 0 ? `Process exited with code ${code}` : undefined,\n        });\n\n        if (!hasReceivedInitialData) {\n          reject(\n            new Error(`Process exited with code ${code} before sending data`)\n          );\n        }\n      });\n\n      // Set timeout for initial data\n      const timeout = setTimeout(() => {\n        if (!hasReceivedInitialData) {\n          console.error(\"[KeyboardService] Timeout waiting for initial data\");\n          cleanup();\n          reject(new Error(\"Timeout waiting for initial data\"));\n        }\n      }, 5000);\n\n      // Cleanup timeout on success or failure\n      Promise.race([\n        new Promise((_, timeoutReject) => {\n          timeout.unref(); // Don't let timeout prevent process exit\n        }),\n        new Promise<void>((successResolve) => {\n          const checkInterval = setInterval(() => {\n            if (hasReceivedInitialData) {\n              clearInterval(checkInterval);\n              clearTimeout(timeout);\n              successResolve();\n            }\n          }, 100);\n        }),\n      ]).catch((error) => {\n        clearTimeout(timeout);\n        reject(error);\n      });\n    });\n  }\n\n  private clearStartupState(): void {\n    if (this.startupTimeout) {\n      clearTimeout(this.startupTimeout);\n      this.startupTimeout = null;\n    }\n    this.setState({\n      isLoading: false,\n      isStarting: false,\n    });\n  }\n\n  private handleStartupFailure(message: string): void {\n    this.clearStartupState();\n    if (this.keyboardProcess) {\n      this.keyboardProcess.kill();\n      this.keyboardProcess = null;\n    }\n    this.setState({\n      isListening: false,\n      error: message,\n      lastError: {\n        message,\n        timestamp: Date.now(),\n      },\n    });\n    dialog.showErrorBox(\n      \"Keyboard Monitor Error\",\n      `Failed to start keyboard monitor: ${message}`\n    );\n  }\n\n  public async stopListening(): Promise<void> {\n    console.log(\"[KeyboardService] stopListening() called\");\n\n    if (this.keyboardProcess) {\n      console.log(\"[KeyboardService] Cleaning up process\");\n      this.keyboardProcess.stdout?.removeAllListeners();\n      this.keyboardProcess.stderr?.removeAllListeners();\n      this.keyboardProcess.removeAllListeners();\n      this.keyboardProcess.kill();\n      this.keyboardProcess = null;\n    }\n\n    this.setState({\n      isListening: false,\n      isLoading: false,\n      error: undefined,\n    });\n\n    console.log(\"[KeyboardService] Service stopped\");\n  }\n\n  private handleKeyboardOutput = (data: Buffer) => {\n    try {\n      const lines = data.toString().split(\"\\n\");\n      for (const line of lines) {\n        const trimmed = line.trim();\n        if (!trimmed) continue;\n\n        if (trimmed.startsWith(\"[DEBUG]\")) {\n          console.log(trimmed);\n          continue;\n        }\n\n        try {\n          const state = JSON.parse(trimmed);\n          // console.log(\"[KeyboardService] Parsed keyboard state:\", state);\n\n          const keyboardState: KeyboardState = {\n            pressedKeys: Array.isArray(state.pressedKeys)\n              ? state.pressedKeys\n              : [],\n            timestamp: Date.now(),\n          };\n\n          // console.log(\n          //   \"[KeyboardService] Enqueueing keyboard event:\",\n          //   keyboardState\n          // );\n          // Queue keyboard events instead of sending directly\n          this.queue.enqueue(\"keyboardEvent\", keyboardState);\n        } catch (parseError) {\n          if (trimmed.startsWith(\"{\") || trimmed.startsWith(\"[\")) {\n            console.error(\"Error parsing keyboard state:\", parseError);\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling keyboard output:\", error);\n    }\n  };\n\n  public async restartWithConfig(config: HyperKeyFeatureConfig): Promise<void> {\n    await this.store.update((draft) => {\n      const feature = draft.features.find((f) => f.name === \"hyperKey\");\n      if (feature) {\n        feature.config = config;\n      }\n    });\n\n    // Emit config change event\n    this.mainWindow?.webContents.send(\"ipc:event\", {\n      service: \"hyperKey\",\n      event: \"configChanged\",\n      data: config,\n    });\n\n    await this.stopListening();\n    await this.startListening();\n  }\n\n  public isRunning(): boolean {\n    return this.keyboardProcess !== null;\n  }\n\n  public dispose(): void {\n    this.stopListening();\n    this.mainWindow = null;\n  }\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { EventEmitter } from \"events\";\nimport { BrowserWindow } from \"electron\";\nimport { spawn } from \"child_process\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Store } from \"../../services/store\";\nimport { MessageQueue } from \"../../services/queue\";\nimport { IPCService } from \"../../services/ipc\";\nimport type { Shortcut, ShortcutState } from \"./types/shortcut\";\nimport type { HyperKeyFeatureConfig } from \"../../services/types\";\n\nconst ipc = IPCService.getInstance();\n\nexport class ShortcutService extends EventEmitter {\n  private store: Store;\n  private queue: MessageQueue;\n  private state: ShortcutState = {\n    shortcuts: [],\n    isEnabled: true,\n  };\n\n  constructor() {\n    super();\n    this.store = Store.getInstance();\n    this.queue = MessageQueue.getInstance();\n    this.setupQueueHandlers();\n    this.setupIPCHandlers();\n\n    console.log(\"[ShortcutService] Initialized\", ipc);\n  }\n\n  private setupQueueHandlers(): void {\n    this.queue.registerHandler(\"shortcut:execute\", async (event) => {\n      console.log(\"[ShortcutService] Executing shortcut:\", event);\n      await this.executeShortcut(event as unknown as Shortcut);\n    });\n  }\n\n  private setupIPCHandlers(): void {\n    ipc.registerService({\n      id: \"shortcuts\",\n      priority: 2,\n    });\n\n    // Listen for keyboard events\n    ipc.registerHandler(\n      \"keyboard\",\n      \"keyPressed\",\n      async (data: { pressedKeys: string[] }) => {\n        console.log(\"[ShortcutService] Handling key pressed event:\", data);\n        await this.handleKeyboardEvent(data);\n      }\n    );\n\n    ipc.registerHandler(\"shortcuts\", \"addShortcut\", async ({ shortcut }) => {\n      console.log(\"[ShortcutService] Adding shortcut:\", shortcut);\n      const newShortcut: Shortcut = {\n        ...shortcut,\n        id: uuidv4(),\n      };\n      await this.store.update((draft) => {\n        const feature = draft.features.find(\n          (f) => f.name === \"shortcutManager\"\n        );\n        if (feature) {\n          (feature.config as ShortcutState).shortcuts.push(newShortcut);\n        }\n      });\n      return this.getState();\n    });\n\n    ipc.registerHandler(\"shortcuts\", \"removeShortcut\", async ({ id }) => {\n      await this.store.update((draft) => {\n        const feature = draft.features.find(\n          (f) => f.name === \"shortcutManager\"\n        );\n        if (feature) {\n          const state = feature.config as ShortcutState;\n          state.shortcuts = state.shortcuts.filter((s) => s.id !== id);\n        }\n      });\n      return this.getState();\n    });\n\n    ipc.registerHandler(\n      \"shortcuts\",\n      \"updateShortcut\",\n      async ({ id, shortcut }) => {\n        await this.store.update((draft) => {\n          const feature = draft.features.find(\n            (f) => f.name === \"shortcutManager\"\n          );\n          if (feature) {\n            const state = feature.config as ShortcutState;\n            const index = state.shortcuts.findIndex((s) => s.id === id);\n            if (index !== -1) {\n              state.shortcuts[index] = {\n                ...state.shortcuts[index],\n                ...shortcut,\n              };\n            }\n          }\n        });\n        return this.getState();\n      }\n    );\n\n    ipc.registerHandler(\"shortcuts\", \"toggleEnabled\", async ({ enabled }) => {\n      console.log(\"[ShortcutService] Toggling enabled:\", enabled);\n      await this.store.update((draft) => {\n        const feature = draft.features.find(\n          (f) => f.name === \"shortcutManager\"\n        );\n        if (feature) {\n          (feature.config as ShortcutState).isEnabled = enabled;\n        }\n      });\n      return this.getState();\n    });\n\n    ipc.registerHandler(\"shortcuts\", \"getState\", async () => {\n      return this.getState();\n    });\n  }\n\n  public async handleKeyboardEvent(data: {\n    pressedKeys: string[];\n  }): Promise<void> {\n    const state = await this.getState();\n\n    if (!state.isEnabled) {\n      console.log(\"[ShortcutService] Service disabled, ignoring keys\");\n      return;\n    }\n\n    console.log(\"[ShortcutService] Pressed keys:\", data.pressedKeys);\n\n    // Get HyperKey config\n    const hyperKeyFeature = await this.store.getFeature(\"hyperKey\");\n    if (!hyperKeyFeature?.config) {\n      console.log(\"[ShortcutService] No HyperKey config found\");\n      return;\n    }\n\n    const hyperKeyConfig = hyperKeyFeature.config as HyperKeyFeatureConfig;\n    if (!hyperKeyConfig.isHyperKeyEnabled) {\n      console.log(\"[ShortcutService] HyperKey is disabled\");\n      return;\n    }\n\n    console.log(\"[ShortcutService] HyperKey config:\", hyperKeyConfig);\n\n    // Check if HyperKey trigger is pressed\n    if (!data.pressedKeys.includes(hyperKeyConfig.trigger)) {\n      console.log(\"[ShortcutService] HyperKey trigger not pressed\");\n      return;\n    }\n\n    // Check if all modifiers are pressed\n    const allModifiersPressed = hyperKeyConfig.modifiers.every((modifier) =>\n      data.pressedKeys.includes(modifier)\n    );\n    if (!allModifiersPressed) {\n      console.log(\"[ShortcutService] Not all modifiers are pressed\");\n      return;\n    }\n\n    console.log(\"[ShortcutService] HyperKey combination active!\");\n\n    // Check each shortcut\n    for (const shortcut of state.shortcuts) {\n      if (!shortcut.enabled) continue;\n\n      // Check if trigger key is pressed\n      if (data.pressedKeys.includes(shortcut.triggerKey)) {\n        console.log(\"[ShortcutService] Executing shortcut:\", shortcut);\n        await this.executeShortcut(shortcut);\n      }\n    }\n  }\n\n  private async executeShortcut(shortcut: Shortcut): Promise<void> {\n    try {\n      if (shortcut.action.type === \"launch\") {\n        console.log(\n          \"[ShortcutService] Launching program:\",\n          shortcut.action.program\n        );\n        spawn(shortcut.action.program, [], { detached: true });\n      }\n\n      ipc.emit({\n        service: \"shortcuts\",\n        event: \"shortcutTriggered\",\n        data: {\n          shortcut,\n          timestamp: Date.now(),\n        },\n      });\n    } catch (error) {\n      console.error(\"[ShortcutService] Error executing shortcut:\", error);\n    }\n  }\n\n  private getState(): ShortcutState {\n    const feature = this.store\n      .getState()\n      .features.find((f) => f.name === \"shortcutManager\");\n    return (feature?.config as ShortcutState) || this.state;\n  }\n\n  public async initialize(): Promise<void> {\n    try {\n      // Initialize the feature in the store if it doesn't exist\n      await this.store.update((draft) => {\n        const feature = draft.features.find(\n          (f) => f.name === \"shortcutManager\"\n        );\n        if (!feature) {\n          console.log(\"[ShortcutService] Creating shortcut manager feature\");\n          draft.features.push({\n            name: \"shortcutManager\",\n            isFeatureEnabled: true,\n            enableFeatureOnStartup: true,\n            config: {\n              shortcuts: [],\n              isEnabled: true,\n            },\n          });\n        }\n      });\n\n      // Add test shortcut if none exist\n      const state = this.getState();\n      if (!state.shortcuts || state.shortcuts.length === 0) {\n        console.log(\"[ShortcutService] Adding test Notepad shortcut\");\n        await this.store.update((draft) => {\n          const feature = draft.features.find(\n            (f) => f.name === \"shortcutManager\"\n          );\n          if (feature) {\n            (feature.config as ShortcutState).shortcuts = [\n              {\n                id: uuidv4(),\n                name: \"Test Notepad\",\n                triggerKey: \"N\",\n                action: {\n                  type: \"launch\",\n                  program: \"notepad.exe\",\n                },\n                enabled: true,\n              },\n            ];\n          }\n        });\n      }\n\n      console.log(\"[ShortcutService] Initialized with state:\", this.getState());\n    } catch (error) {\n      console.error(\"[ShortcutService] Error initializing:\", error);\n    }\n  }\n}\n","import {\r\n  BrowserWindow,\r\n  Menu,\r\n  Tray,\r\n  nativeImage,\r\n  globalShortcut,\r\n} from \"electron\";\r\nimport { KeyboardService } from \"./hyperkeys/keyboard-service\";\r\nimport { Store } from \"@electron/services/store\";\r\n\r\nexport class TrayFeature {\r\n  private tray: Tray | null = null;\r\n  private store: Store;\r\n\r\n  constructor(\r\n    private mainWindow: BrowserWindow,\r\n    private keyboardService: KeyboardService\r\n  ) {\r\n    this.store = Store.getInstance();\r\n  }\r\n\r\n  private async getStateIndicator() {\r\n    const state = await this.keyboardService?.getState();\r\n    if (!state) return { tooltip: \"HyperCaps ⭘\" };\r\n\r\n    if (state.error) return { tooltip: `HyperCaps ⚠️ Error: ${state.error}` };\r\n    if (state.isLoading) return { tooltip: \"HyperCaps ⏳ Loading...\" };\r\n    if (state.isStarting) return { tooltip: \"HyperCaps ⏳ Starting...\" };\r\n    if (!state.isListening) return { tooltip: \"HyperCaps ❌ Stopped\" };\r\n    return { tooltip: \"HyperCaps ✅ Running\" };\r\n  }\r\n\r\n  private async updateTrayState() {\r\n    if (!this.tray) return;\r\n    const { tooltip } = await this.getStateIndicator();\r\n    this.tray.setToolTip(tooltip);\r\n  }\r\n\r\n  public async initialize() {\r\n    // Create a transparent 16x16 image for the tray\r\n    const icon = nativeImage.createEmpty();\r\n    icon.addRepresentation({\r\n      width: 16,\r\n      height: 16,\r\n      scaleFactor: 1.0,\r\n      buffer: Buffer.alloc(16 * 16 * 4), // Transparent RGBA buffer\r\n    });\r\n\r\n    this.tray = new Tray(icon);\r\n    this.updateTrayState();\r\n\r\n    // Register global shortcut\r\n    globalShortcut.register(\"CommandOrControl+Shift+S\", () => {\r\n      this.mainWindow.show();\r\n      this.mainWindow.focus();\r\n    });\r\n\r\n    // Initial menu setup\r\n    await this.updateContextMenu();\r\n\r\n    // Listen for keyboard service state changes\r\n    this.keyboardService.on(\"state-change\", async () => {\r\n      await this.updateTrayState();\r\n      await this.updateContextMenu();\r\n    });\r\n  }\r\n\r\n  private async updateContextMenu() {\r\n    if (!this.tray) return;\r\n\r\n    const state = await this.keyboardService?.getState();\r\n    const { settings } = this.store.getState();\r\n    const hyperKey = await this.store.getFeature(\"hyperKey\");\r\n\r\n    const contextMenu = Menu.buildFromTemplate([\r\n      {\r\n        label: \"HyperCaps\",\r\n        enabled: false,\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Enable HyperKey\",\r\n        type: \"checkbox\",\r\n        checked: hyperKey?.config.isHyperKeyEnabled || false,\r\n        accelerator: \"CommandOrControl+Shift+H\",\r\n        click: async (menuItem) => {\r\n          // Update store\r\n          await this.store.update((draft) => {\r\n            const feature = draft.features.find((f) => f.name === \"hyperKey\");\r\n            if (feature) {\r\n              feature.config.isHyperKeyEnabled = menuItem.checked;\r\n            }\r\n          });\r\n\r\n          // Get updated config and restart service\r\n          const updatedHyperKey = await this.store.getFeature(\"hyperKey\");\r\n          if (updatedHyperKey) {\r\n            await this.keyboardService?.restartWithConfig(\r\n              updatedHyperKey.config\r\n            );\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"Start HyperKey with App\",\r\n        type: \"checkbox\",\r\n        checked: hyperKey?.enableFeatureOnStartup || false,\r\n        click: async (menuItem) => {\r\n          await this.store.update((draft) => {\r\n            const feature = draft.features.find((f) => f.name === \"hyperKey\");\r\n            if (feature) {\r\n              feature.enableFeatureOnStartup = menuItem.checked;\r\n            }\r\n          });\r\n        },\r\n      },\r\n      {\r\n        label: \"Block CapsLock Toggle\",\r\n        type: \"checkbox\",\r\n        checked: hyperKey?.config.capsLockBehavior === \"BlockToggle\",\r\n        click: async (menuItem) => {\r\n          // Update store\r\n          await this.store.update((draft) => {\r\n            const feature = draft.features.find((f) => f.name === \"hyperKey\");\r\n            if (feature) {\r\n              feature.config.capsLockBehavior = menuItem.checked\r\n                ? \"BlockToggle\"\r\n                : \"AllowToggle\";\r\n            }\r\n          });\r\n\r\n          // Get updated config and restart service\r\n          const updatedHyperKey = await this.store.getFeature(\"hyperKey\");\r\n          if (updatedHyperKey) {\r\n            await this.keyboardService?.restartWithConfig(\r\n              updatedHyperKey.config\r\n            );\r\n          }\r\n        },\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Settings\",\r\n        submenu: [\r\n          {\r\n            label: \"Start with Windows\",\r\n            type: \"checkbox\",\r\n            checked: settings?.startupOnBoot || false,\r\n            click: async (menuItem) => {\r\n              await this.store.update((draft) => {\r\n                if (!draft.settings) draft.settings = {};\r\n                draft.settings.startupOnBoot = menuItem.checked;\r\n              });\r\n            },\r\n          },\r\n          {\r\n            label: \"Start Minimized\",\r\n            type: \"checkbox\",\r\n            checked: settings?.startMinimized || false,\r\n            click: async (menuItem) => {\r\n              await this.store.update((draft) => {\r\n                if (!draft.settings) draft.settings = {};\r\n                draft.settings.startMinimized = menuItem.checked;\r\n              });\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      { type: \"separator\" },\r\n      {\r\n        label: \"Show Window\",\r\n        accelerator: \"CommandOrControl+Shift+S\",\r\n        click: () => {\r\n          this.mainWindow.show();\r\n          this.mainWindow.focus();\r\n        },\r\n      },\r\n      {\r\n        label: \"Quit\",\r\n        accelerator: \"CommandOrControl+Q\",\r\n        click: () => {\r\n          this.mainWindow.close();\r\n          this.dispose();\r\n        },\r\n      },\r\n    ]);\r\n\r\n    this.tray.setContextMenu(contextMenu);\r\n  }\r\n\r\n  public dispose() {\r\n    globalShortcut.unregister(\"CommandOrControl+Shift+S\");\r\n    if (this.tray) {\r\n      this.tray.destroy();\r\n      this.tray = null;\r\n    }\r\n  }\r\n}\r\n","import { app, BrowserWindow, ipcMain, dialog, globalShortcut } from \"electron\";\r\nimport path from \"path\";\r\nimport { KeyboardService } from \"./features/hyperkeys/keyboard-service\";\r\nimport { ShortcutService } from \"./features/shortcut-manager/shortcut-service\";\r\nimport { Store } from \"@electron/services/store\";\r\nimport { TrayFeature } from \"./features/tray\";\r\nimport { AppState } from \"@electron/services/store/types/app-state\";\r\n\r\n// Immediate environment logging\r\nconsole.log(\"=== Environment Debug ===\");\r\nconsole.log(\"NODE_ENV:\", process.env.NODE_ENV);\r\nconsole.log(\"isDev:\", process.env.NODE_ENV === \"development\");\r\nconsole.log(\"======================\");\r\n\r\n// Check platform - exit if not Windows\r\nif (process.platform !== \"win32\") {\r\n  dialog.showErrorBox(\r\n    \"Unsupported Platform\",\r\n    \"HyperCaps is only supported on Windows. The application will now exit.\"\r\n  );\r\n  app.quit();\r\n}\r\n\r\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\r\nif (require(\"electron-squirrel-startup\")) {\r\n  app.quit();\r\n}\r\n\r\nlet keyboardService: KeyboardService;\r\nlet shortcutService: ShortcutService;\r\nlet trayFeature: TrayFeature | null = null;\r\nlet mainWindow: BrowserWindow | null = null;\r\n\r\nconst initializeServices = async (window: BrowserWindow) => {\r\n  console.log(\"[Main] Initializing services\");\r\n  const store = Store.getInstance();\r\n  await store.load();\r\n\r\n  // Initialize keyboard service if not already initialized\r\n  if (!keyboardService) {\r\n    console.log(\"[Main] Creating new keyboard service\");\r\n    keyboardService = new KeyboardService();\r\n    await keyboardService.init();\r\n  }\r\n\r\n  // Initialize shortcut service if not already initialized\r\n  if (!shortcutService) {\r\n    console.log(\"[Main] Creating new shortcut service\");\r\n    shortcutService = new ShortcutService();\r\n    await shortcutService.initialize();\r\n  }\r\n\r\n  // Set the window and re-register handlers\r\n  keyboardService.setMainWindow(window);\r\n\r\n  // Initialize tray feature if needed\r\n  if (!trayFeature) {\r\n    console.log(\"[Main] Creating new tray feature\");\r\n    trayFeature = new TrayFeature(window, keyboardService);\r\n    await trayFeature.initialize();\r\n  }\r\n};\r\n\r\nconst createWindow = async () => {\r\n  console.log(\"Environment:\", process.env.NODE_ENV);\r\n\r\n  // Create the browser window.\r\n  mainWindow = new BrowserWindow({\r\n    width: 1200,\r\n    height: 800,\r\n    webPreferences: {\r\n      nodeIntegration: false,\r\n      contextIsolation: true,\r\n      preload: path.join(__dirname, \"../preload/preload.js\"),\r\n    },\r\n    resizable: true,\r\n    minimizable: true,\r\n    maximizable: false,\r\n    fullscreenable: false,\r\n    // Round corners on Windows 11\r\n    roundedCorners: true,\r\n    backgroundMaterial: \"acrylic\",\r\n    darkTheme: true,\r\n    backgroundColor: \"#00000000\",\r\n  });\r\n\r\n  // Setup IPC handlers\r\n  ipcMain.on(\"start-listening\", () => {\r\n    keyboardService?.startListening();\r\n  });\r\n\r\n  ipcMain.on(\"stop-listening\", () => {\r\n    keyboardService?.stopListening();\r\n  });\r\n\r\n  // Add handler for getting keyboard service state\r\n  ipcMain.handle(\"get-keyboard-service-state\", () => {\r\n    return keyboardService?.isRunning() || false;\r\n  });\r\n\r\n  // HyperKey config handlers\r\n  ipcMain.handle(\"get-hyperkey-config\", async () => {\r\n    const store = Store.getInstance();\r\n    const hyperKey = await store.getFeature(\"hyperKey\");\r\n    return hyperKey?.config;\r\n  });\r\n\r\n  ipcMain.handle(\"set-hyperkey-config\", async (event, config) => {\r\n    const store = Store.getInstance();\r\n    await store.update((draft) => {\r\n      const hyperkeyFeature = draft.features.find((f) => f.name === \"hyperKey\");\r\n      if (hyperkeyFeature) {\r\n        hyperkeyFeature.config = config;\r\n      }\r\n    });\r\n\r\n    // Emit config change event\r\n    mainWindow?.webContents.send(\"ipc:event\", {\r\n      service: \"hyperKey\",\r\n      event: \"configChanged\",\r\n      data: config,\r\n    });\r\n\r\n    await keyboardService?.restartWithConfig(config);\r\n  });\r\n\r\n  // Load appropriate content based on environment\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    mainWindow.loadURL(\"http://localhost:5173\");\r\n  } else {\r\n    // In production, load the built index.html file\r\n    const indexPath = path.join(app.getAppPath(), \"dist\", \"index.html\");\r\n    mainWindow.loadFile(indexPath);\r\n\r\n    // Handle page refresh in production\r\n    mainWindow.webContents.on(\r\n      \"did-fail-load\",\r\n      (event, errorCode, errorDescription) => {\r\n        console.log(\"Failed to load:\", errorCode, errorDescription);\r\n        mainWindow?.loadFile(indexPath);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Handle window reload\r\n  mainWindow.webContents.on(\"did-finish-load\", async () => {\r\n    console.log(\"[Main] Window finished loading, initializing services\");\r\n    if (mainWindow) {\r\n      await initializeServices(mainWindow);\r\n    }\r\n  });\r\n\r\n  // Hide window instead of closing when user clicks X\r\n  mainWindow.on(\"close\", (event) => {\r\n    if (!(mainWindow as any).isQuitting) {\r\n      event.preventDefault();\r\n      mainWindow?.hide();\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\n// Add window control handlers\r\nipcMain.on(\"minimize-window\", () => {\r\n  mainWindow?.minimize();\r\n});\r\n\r\nipcMain.on(\"close-window\", () => {\r\n  mainWindow?.hide();\r\n});\r\n\r\n// This method will be called when Electron has finished initialization\r\napp.whenReady().then(async () => {\r\n  // Create window first\r\n  await createWindow();\r\n  if (mainWindow) {\r\n    // Initialize services after window is created\r\n    await initializeServices(mainWindow);\r\n  }\r\n\r\n  // Startup settings\r\n  ipcMain.handle(\"get-startup-settings\", async () => {\r\n    const store = Store.getInstance();\r\n    const state = store.getState();\r\n    return {\r\n      startupOnBoot: state.settings?.startupOnBoot || false,\r\n      startMinimized: state.settings?.startMinimized || false,\r\n    };\r\n  });\r\n\r\n  ipcMain.handle(\"set-startup-on-boot\", async (_, enabled: boolean) => {\r\n    const store = Store.getInstance();\r\n    await store.update((draft) => {\r\n      if (!draft.settings) draft.settings = {};\r\n      draft.settings.startupOnBoot = enabled;\r\n    });\r\n  });\r\n\r\n  ipcMain.handle(\"set-start-minimized\", async (_, enabled: boolean) => {\r\n    const store = Store.getInstance();\r\n    await store.update((draft) => {\r\n      if (!draft.settings) draft.settings = {};\r\n      draft.settings.startMinimized = enabled;\r\n    });\r\n  });\r\n\r\n  // Store state\r\n  ipcMain.handle(\"get-full-state\", async () => {\r\n    const store = Store.getInstance();\r\n    return store.getState();\r\n  });\r\n\r\n  // Window controls\r\n  ipcMain.on(\"minimize-window\", () => {\r\n    mainWindow?.minimize();\r\n  });\r\n});\r\n\r\n// Add proper cleanup\r\napp.on(\"before-quit\", () => {\r\n  if (keyboardService) {\r\n    keyboardService.dispose();\r\n  }\r\n  if (trayFeature) {\r\n    trayFeature.dispose();\r\n  }\r\n  globalShortcut.unregisterAll();\r\n});\r\n\r\n// Quit when all windows are closed, except on macOS\r\napp.on(\"window-all-closed\", () => {\r\n  if (process.platform !== \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (BrowserWindow.getAllWindows().length === 0) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\n// Listen for store changes and emit events\r\nStore.getInstance().on(\"stateChanged\", (state: AppState) => {\r\n  mainWindow?.webContents.send(\"ipc:event\", {\r\n    service: \"store\",\r\n    event: \"stateChanged\",\r\n    data: state,\r\n  });\r\n});\r\n"],"names":["NOTHING","DRAFTABLE","DRAFT_STATE","errors","plugin","thing","data","die","error","args","e","msg","getPrototypeOf","isDraft","value","isDraftable","isPlainObject","_a","isMap","isSet","objectCtorString","proto","Ctor","each","obj","iter","getArchtype","key","entry","index","state","has","prop","set","propOrOldValue","t","is","x","y","target","latest","shallowCopy","base","strict","isPlain","descriptors","keys","i","desc","freeze","deep","isFrozen","dontMutateFrozenCollections","plugins","getPlugin","pluginKey","currentScope","getCurrentScope","createScope","parent_","immer_","usePatchesInScope","scope","patchListener","revokeScope","leaveScope","revokeDraft","enterScope","immer2","draft","processResult","result","baseDraft","finalize","maybeFreeze","rootScope","path","childValue","finalizeProperty","resultEach","isSet2","parentState","targetObject","rootPath","targetIsSet","res","createProxyProxy","parent","isArray","traps","objectTraps","arrayTraps","revoke","proxy","source","readPropFromProto","peek","prepareCopy","createProxy","getDescriptorFromProto","current2","currentState","markChanged","owner","fn","Immer2","config","recipe","defaultBase","self","base2","hasError","p","ip","patches","inversePatches","current","patch","applyPatchesImpl","currentImpl","copy","immer","produce","util","val","assertIs","_arg","assertNever","_x","items","item","validKeys","k","filtered","object","arr","checker","joinValues","array","separator","_","objectUtil","first","second","ZodParsedType","getParsedType","ZodIssueCode","quotelessJson","ZodError","issues","sub","subs","actualProto","_mapper","mapper","issue","fieldErrors","processError","curr","el","formErrors","errorMap","_ctx","message","overrideErrorMap","setErrorMap","map","getErrorMap","makeIssue","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","EMPTY_PATH","addIssueToContext","ctx","overrideMap","ParseStatus","status","results","arrayValue","INVALID","pairs","syncPairs","pair","finalObject","DIRTY","OK","isAborted","isDirty","isValid","isAsync","__classPrivateFieldGet","receiver","kind","f","__classPrivateFieldSet","errorUtil","_ZodEnum_cache","_ZodNativeEnum_cache","ParseInputLazyPath","handleResult","processCreateParams","invalid_type_error","required_error","description","iss","_b","ZodType","input","err","maybeAsyncResult","check","getIssueProperties","setError","refinementData","refinement","ZodEffects","ZodFirstPartyTypeKind","def","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","transform","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","timeRegexSource","regex","timeRegex","datetimeRegex","opts","isValidIP","version","isValidJWT","jwt","alg","header","base64","decoded","isValidCidr","ZodString","tooBig","tooSmall","validation","options","minLength","maxLength","len","ch","min","max","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","schema","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shape","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","_c","_d","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","types","getDiscriminator","type","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","a","b","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","merged","left","right","itemIndex","rest","schemas","ZodRecord","keyType","valueType","third","ZodMap","finalMap","ZodSet","finalizeSet","elements","parsedSet","element","minSize","maxSize","size","ZodFunction","makeArgsIssue","makeReturnsIssue","returns","me","parsedArgs","parsedReturns","returnType","func","getter","values","expectedValues","enumValues","newDef","opt","nativeEnumValues","promisified","effect","checkCtx","arg","processed","executeRefinement","acc","inner","preprocess","newCtx","ZodNaN","BRAND","inResult","custom","fatal","_fatal","p2","late","instanceOfType","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","coerce","NEVER","z","HyperKeyFeatureConfigSchema","FeatureNameSchema","ShortcutManagerConfigSchema","FeatureSchema","AppSettingsSchema","AppStateSchema","pkg","app","CURRENT_STATE_VERSION","MIGRATIONS","feature","DEFAULT_STATE","_Store","EventEmitter","__publicField","partsA","partsB","partA","partB","versionedState","sortedMigrations","migration","nextMigration","fs","updater","name","Store","DEFAULT_OPTIONS","generateId","crypto","_MessageQueue","handler","payload","priority","pendingMessages","timeout","messageId","MessageQueue","createResult","createError","code","details","_IPCService","service","serviceId","action","serviceHandlers","event","BrowserWindow","window","handlers","ipcMain","command","IPCService","ipc","KeyboardService","lines","line","trimmed","keyboardState","parseError","updates","dialog","scriptSubPath","hyperKey","hyperKeyFeature","resolve","checkInterval","scriptPath","spawn","reject","hasReceivedInitialData","cleanup","output","signal","timeoutReject","successResolve","byteToHex","unsafeStringify","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","buf","rnds","ShortcutService","shortcut","newShortcut","uuidv4","id","s","enabled","hyperKeyConfig","modifier","TrayFeature","mainWindow","keyboardService","tooltip","icon","nativeImage","Tray","globalShortcut","settings","contextMenu","Menu","menuItem","updatedHyperKey","shortcutService","trayFeature","initializeServices","createWindow","hyperkeyFeature","indexPath","errorCode","errorDescription"],"mappings":"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","x_google_ignoreList":[0,1,10,11,12,13]}