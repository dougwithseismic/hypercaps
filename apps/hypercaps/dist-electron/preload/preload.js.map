{"version":3,"file":"preload.js","sources":["../../electron/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer } from \"electron\";\n\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld(\"api\", {\n  startListening: () => ipcRenderer.send(\"start-listening\"),\n  stopListening: () => ipcRenderer.send(\"stop-listening\"),\n  onKeyboardEvent: (callback: (event: any) => void) => {\n    ipcRenderer.on(\"keyboard-event\", (_, data) => callback(data));\n  },\n  onKeyboardServiceState: (callback: (enabled: boolean) => void) => {\n    ipcRenderer.on(\"keyboard-service-state\", (_, enabled) => callback(enabled));\n  },\n  onKeyboardServiceLoading: (callback: (loading: boolean) => void) => {\n    ipcRenderer.on(\"keyboard-service-loading\", (_, loading) =>\n      callback(loading)\n    );\n  },\n  getMappings: () => ipcRenderer.invoke(\"get-mappings\"),\n  addMapping: (mapping: any) => ipcRenderer.invoke(\"add-mapping\", mapping),\n  updateMapping: (id: string, updates: any) =>\n    ipcRenderer.invoke(\"update-mapping\", id, updates),\n  deleteMapping: (id: string) => ipcRenderer.invoke(\"delete-mapping\", id),\n\n  // HyperKey config\n  getHyperKeyConfig: () => ipcRenderer.invoke(\"get-hyperkey-config\"),\n  setHyperKeyConfig: (config: any) =>\n    ipcRenderer.invoke(\"set-hyperkey-config\", config),\n  restartWithConfig: (config: any) =>\n    ipcRenderer.invoke(\"restart-with-config\", config),\n  onHyperKeyState: (callback: (config: any) => void) => {\n    ipcRenderer.on(\"hyperkey-state\", (_, config) => callback(config));\n  },\n\n  // Startup settings\n  getStartupSettings: () => ipcRenderer.invoke(\"get-startup-settings\"),\n  setStartupOnBoot: (enabled: boolean) =>\n    ipcRenderer.invoke(\"set-startup-on-boot\", enabled),\n  setEnableOnStartup: (enabled: boolean) =>\n    ipcRenderer.invoke(\"set-enable-on-startup\", enabled),\n});\n\n// Expose window control methods\ncontextBridge.exposeInMainWorld(\"electron\", {\n  minimize: () => ipcRenderer.send(\"minimize-window\"),\n  close: () => ipcRenderer.send(\"close-window\"),\n});\n"],"names":["contextBridge","ipcRenderer"],"mappings":";;AAIAA,SAAAA,cAAc,kBAAkB,OAAO;AAAA,EACrC,gBAAgB,MAAMC,SAAAA,YAAY,KAAK,iBAAiB;AAAA,EACxD,eAAe,MAAMA,SAAAA,YAAY,KAAK,gBAAgB;AAAA,EACtD,iBAAiB,CAAC,aAAmC;AACnDA,aAAA,YAAY,GAAG,kBAAkB,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,EAC9D;AAAA,EACA,wBAAwB,CAAC,aAAyC;AAChEA,aAAA,YAAY,GAAG,0BAA0B,CAAC,GAAG,YAAY,SAAS,OAAO,CAAC;AAAA,EAC5E;AAAA,EACA,0BAA0B,CAAC,aAAyC;AACtDA,aAAAA,YAAA;AAAA,MAAG;AAAA,MAA4B,CAAC,GAAG,YAC7C,SAAS,OAAO;AAAA,IAClB;AAAA,EACF;AAAA,EACA,aAAa,MAAMA,SAAAA,YAAY,OAAO,cAAc;AAAA,EACpD,YAAY,CAAC,YAAiBA,SAAAA,YAAY,OAAO,eAAe,OAAO;AAAA,EACvE,eAAe,CAAC,IAAY,YAC1BA,SAAAA,YAAY,OAAO,kBAAkB,IAAI,OAAO;AAAA,EAClD,eAAe,CAAC,OAAeA,SAAAA,YAAY,OAAO,kBAAkB,EAAE;AAAA;AAAA,EAGtE,mBAAmB,MAAMA,SAAAA,YAAY,OAAO,qBAAqB;AAAA,EACjE,mBAAmB,CAAC,WAClBA,SAAAA,YAAY,OAAO,uBAAuB,MAAM;AAAA,EAClD,mBAAmB,CAAC,WAClBA,SAAAA,YAAY,OAAO,uBAAuB,MAAM;AAAA,EAClD,iBAAiB,CAAC,aAAoC;AACpDA,aAAA,YAAY,GAAG,kBAAkB,CAAC,GAAG,WAAW,SAAS,MAAM,CAAC;AAAA,EAClE;AAAA;AAAA,EAGA,oBAAoB,MAAMA,SAAAA,YAAY,OAAO,sBAAsB;AAAA,EACnE,kBAAkB,CAAC,YACjBA,SAAAA,YAAY,OAAO,uBAAuB,OAAO;AAAA,EACnD,oBAAoB,CAAC,YACnBA,SAAY,YAAA,OAAO,yBAAyB,OAAO;AACvD,CAAC;AAGDD,SAAAA,cAAc,kBAAkB,YAAY;AAAA,EAC1C,UAAU,MAAMC,SAAAA,YAAY,KAAK,iBAAiB;AAAA,EAClD,OAAO,MAAMA,qBAAY,KAAK,cAAc;AAC9C,CAAC;"}