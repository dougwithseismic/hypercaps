{"version":3,"file":"preload.js","sources":["../../electron/preload.ts"],"sourcesContent":["import { contextBridge, ipcRenderer } from \"electron\";\nimport { AppState } from \"./services/store/types/app-state\";\nimport { HyperKeyFeatureConfig } from \"./features/hyperkeys/types/hyperkey-feature\";\n\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld(\"api\", {\n  // Window controls\n  minimizeWindow: () => {\n    ipcRenderer.send(\"minimize-window\");\n  },\n  closeWindow: () => {\n    ipcRenderer.send(\"close-window\");\n  },\n\n  // Keyboard service\n  startListening: () => {\n    ipcRenderer.send(\"start-listening\");\n  },\n  stopListening: () => {\n    ipcRenderer.send(\"stop-listening\");\n  },\n  isListening: async () => {\n    return ipcRenderer.invoke(\"get-keyboard-service-state\");\n  },\n\n  // HyperKey feature\n  getHyperKeyConfig: async () => {\n    return ipcRenderer.invoke(\"get-hyperkey-config\");\n  },\n  setHyperKeyConfig: async (config: HyperKeyFeatureConfig) => {\n    return ipcRenderer.invoke(\"set-hyperkey-config\", config);\n  },\n\n  // App settings\n  getStartupSettings: async () => {\n    return ipcRenderer.invoke(\"get-startup-settings\");\n  },\n  setStartupOnBoot: async (enabled: boolean) => {\n    return ipcRenderer.invoke(\"set-startup-on-boot\", enabled);\n  },\n  setStartMinimized: async (enabled: boolean) => {\n    return ipcRenderer.invoke(\"set-start-minimized\", enabled);\n  },\n\n  // Store state\n  getFullState: async () => {\n    return ipcRenderer.invoke(\"get-full-state\") as Promise<AppState>;\n  },\n\n  // Event listeners\n  onKeyboardEvent: (callback: (event: any) => void) => {\n    ipcRenderer.on(\"keyboard-event\", (_, data) => callback(data));\n  },\n  onKeyboardServiceState: (callback: (event: any) => void) => {\n    ipcRenderer.on(\"keyboard-service-state\", (_, data) => callback(data));\n  },\n  onHyperKeyState: (callback: (event: any) => void) => {\n    ipcRenderer.on(\"hyperkey-state\", (_, data) => callback(data));\n  },\n});\n"],"names":["contextBridge","ipcRenderer"],"mappings":";;AAMAA,SAAAA,cAAc,kBAAkB,OAAO;AAAA;AAAA,EAErC,gBAAgB,MAAM;AACpBC,aAAA,YAAY,KAAK,iBAAiB;AAAA,EACpC;AAAA,EACA,aAAa,MAAM;AACjBA,aAAA,YAAY,KAAK,cAAc;AAAA,EACjC;AAAA;AAAA,EAGA,gBAAgB,MAAM;AACpBA,aAAA,YAAY,KAAK,iBAAiB;AAAA,EACpC;AAAA,EACA,eAAe,MAAM;AACnBA,aAAA,YAAY,KAAK,gBAAgB;AAAA,EACnC;AAAA,EACA,aAAa,YAAY;AAChB,WAAAA,SAAA,YAAY,OAAO,4BAA4B;AAAA,EACxD;AAAA;AAAA,EAGA,mBAAmB,YAAY;AACtB,WAAAA,SAAA,YAAY,OAAO,qBAAqB;AAAA,EACjD;AAAA,EACA,mBAAmB,OAAO,WAAkC;AACnD,WAAAA,qBAAY,OAAO,uBAAuB,MAAM;AAAA,EACzD;AAAA;AAAA,EAGA,oBAAoB,YAAY;AACvB,WAAAA,SAAA,YAAY,OAAO,sBAAsB;AAAA,EAClD;AAAA,EACA,kBAAkB,OAAO,YAAqB;AACrC,WAAAA,qBAAY,OAAO,uBAAuB,OAAO;AAAA,EAC1D;AAAA,EACA,mBAAmB,OAAO,YAAqB;AACtC,WAAAA,qBAAY,OAAO,uBAAuB,OAAO;AAAA,EAC1D;AAAA;AAAA,EAGA,cAAc,YAAY;AACjB,WAAAA,SAAA,YAAY,OAAO,gBAAgB;AAAA,EAC5C;AAAA;AAAA,EAGA,iBAAiB,CAAC,aAAmC;AACnDA,aAAA,YAAY,GAAG,kBAAkB,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,EAC9D;AAAA,EACA,wBAAwB,CAAC,aAAmC;AAC1DA,aAAA,YAAY,GAAG,0BAA0B,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,EACtE;AAAA,EACA,iBAAiB,CAAC,aAAmC;AACnDA,aAAA,YAAY,GAAG,kBAAkB,CAAC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,EAAA;AAEhE,CAAC;"}